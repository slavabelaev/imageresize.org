{"version":3,"sources":["components/layouts/AppLogo/AppLogo.svg","assets/icons sync /^/.//.*/.svg$","assets/icons/converter.svg","assets/icons/envelope.svg","assets/icons/facebook.svg","assets/icons/facebook_dark.svg","assets/icons/features.svg","assets/icons/file.svg","assets/icons/google-plus.svg","assets/icons/google-plus_dark.svg","assets/icons/image.svg","assets/icons/pdf.svg","assets/icons/pinterest.svg","assets/icons/reddit.svg","assets/icons/twitter.svg","assets/icons/twitter_dark.svg","components/tools/PdfMergeTool/PdfMergeTool.cover.svg","content/images/cropping-1.jpg","content/images/cropping-2.jpg","content/images/editing-1.jpg","content/images/editing-2.jpg","content/images/editing-3.jpg","content/images/editing-4.jpg","content/images/compressing-1.jpg","content/images/compressing-2.jpg","assets/images/background-left.jpg","assets/images/background-right.jpg","components/layouts/AppLogo/AppLogo.styles.js","components/layouts/AppLogo/AppLogo.jsx","components/common/AppIcon/AppIcon.styles.js","components/common/AppIcon/AppIcon.jsx","components/layouts/AppHeader/AppHeader.styles.js","components/layouts/AppHeader/AppHeader.jsx","components/layouts/AppContainer/AppContainer.styles.js","components/layouts/AppContainer/AppContainer.jsx","components/layouts/AppFooter/AppFooter.styles.js","components/layouts/AppFooter/AppFooter.jsx","components/tools/ImageManager/ImageManager.styles.js","components/tools/ImageManager/ImageManager.jsx","components/tools/MemeEditor/TextEditor.styles.js","components/tools/MemeEditor/TextEditor.jsx","components/tools/MemeEditor/IconList.styles.js","components/tools/MemeEditor/IconList.jsx","components/tools/MemeEditor/MemeEditor.styles.js","components/tools/MemeEditor/MemeEditor.jsx","components/common/CopyField/CopyField.styles.js","components/common/CopyField/CopyField.jsx","components/tools/EmbedList/EmbedList.styles.js","components/tools/EmbedList/EmbedList.jsx","components/common/ShareLink/ShareLink.styles.js","components/common/ShareLink/ShareLink.jsx","components/tools/ShareImage/ShareImage.styles.js","components/tools/ShareImage/ShareImage.jsx","components/tools/MemeMaker/MemeMaker.styles.js","components/tools/MemeMaker/MemeMaker.jsx","components/pages/MemeMakerPage/MemeMakerPage.styles.js","components/pages/MemeMakerPage/MemeMakerPage.jsx","components/common/Processing/Processing.styles.js","components/common/Processing/Processing.jsx","components/common/MessageStack/MessageStack.styles.js","components/common/MessageStack/MessageStack.jsx","components/tools/FileUploadManager/FileUploadManager.styles.js","components/tools/FileUploadManager/FileUploadManager.jsx","components/tools/ImageResizeTool/ImageResizeTool.styles.js","components/tools/ImageResizeTool/ImageResizeTool.jsx","components/pages/ImageResizePage/ImageResizePage.styles.js","components/pages/ImageResizePage/ImageResizePage.jsx","components/tools/ImageBulkResizeTool/ImageBulkResizeTool.styles.js","components/tools/ImageBulkResizeTool/ImageBulkResizeTool.jsx","components/pages/ImageBulkResizePage/ImageBulkResizePage.styles.js","components/pages/ImageBulkResizePage/ImageBulkResizePage.jsx","components/tools/ImageCompressTool/ImageCompressTool.styles.js","components/tools/ImageCompressTool/ImageCompressTool.jsx","components/pages/ImageCompressPage/ImageCompressPage.styles.js","components/pages/ImageCompressPage/ImageCompressPage.jsx","components/pages/ImageFeaturesPage/ImageFeaturesPage.styles.js","components/pages/ImageFeaturesPage/ImageFeaturesPage.jsx","components/tools/PdfResizeTool/PdfResizeTool.styles.js","components/tools/PdfResizeTool/PdfResizeTool.jsx","components/pages/PdfResizePage/PdfResizePage.styles.js","components/pages/PdfResizePage/PdfResizePage.jsx","components/tools/PdfCompressTool/PdfCompressTool.styles.js","components/tools/PdfCompressTool/PdfCompressTool.jsx","components/pages/PdfCompressPage/PdfCompressPage.styles.js","components/pages/PdfCompressPage/PdfCompressPage.jsx","components/tools/PdfMergeTool/PdfMergeTool.styles.js","components/tools/PdfMergeTool/PdfMergeTool.jsx","components/pages/PdfMergePage/PdfMergePage.styles.js","components/pages/PdfMergePage/PdfMergePage.jsx","components/tools/SplitManager/SplitManager.styles.js","components/tools/SplitManager/SplitManager.jsx","components/tools/PdfSplitTool/PdfSplitTool.styles.js","components/tools/PdfSplitTool/PdfSplitTool.jsx","components/pages/PdfSplitPage/PdfSplitPage.styles.js","components/pages/PdfSplitPage/PdfSplitPage.jsx","components/pages/ConverterPage/ConverterPage.styles.js","components/pages/ConverterPage/ConverterPage.jsx","components/pages/FeatureCroppingPage/FeatureCroppingPage.styles.js","components/pages/FeatureCroppingPage/FeatureCroppingPage.jsx","components/pages/FeatureEditingPage/FeatureEditingPage.styles.js","components/pages/FeatureEditingPage/FeatureEditingPage.jsx","components/pages/FeatureCompressingPage/FeatureCompressingPage.styles.js","components/pages/FeatureCompressingPage/FeatureCompressingPage.jsx","components/pages/TermsOfServicePage/TermsOfServicePage.styles.js","components/pages/TermsOfServicePage/TermsOfServicePage.jsx","components/pages/PrivacyPage/PrivacyPage.styles.js","components/pages/PrivacyPage/PrivacyPage.jsx","components/pages/HelpPage/HelpPage.styles.js","components/pages/HelpPage/HelpPage.jsx","components/pages/NotFoundPage/NotFoundPage.styles.js","components/pages/NotFoundPage/NotFoundPage.jsx","components/layouts/AppRouter/AppRouter.jsx","App.theme.js","App.styles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./converter.svg","./envelope.svg","./facebook.svg","./facebook_dark.svg","./features.svg","./file.svg","./google-plus.svg","./google-plus_dark.svg","./image.svg","./pdf.svg","./pinterest.svg","./reddit.svg","./twitter.svg","./twitter_dark.svg","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","styles","theme","root","display","transition","transitions","create","&:hover","opacity","image","width","withStyles","props","react_default","a","createElement","Link","className","classNames","classes","to","src","AppLogoImage","alt","backgroundSize","AppIcon","state","size","_this","this","icon","backgroundImage","require","concat","height","minWidth","minHeight","style","React","Component","AppLogo","padding","spacing","unit","Toolbar","alignItems","justifyContent","paddingRight","paddingLeft","borderColor","palette","border","light","borderStyle","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","MenuList","defineProperty","breakpoints","up","marginLeft","MenuItem","fontSize","typography","textTransform","&>i","&:hover>i","color","text","primary","backgroundColor","MenuItem_selected","grey","boxShadow","fontWeight","marginBottom","marginRight","Tabs","Tab","&[aria-selected=true]","&:not([aria-selected=true]):hover","IconButton_toggleDrawer","isPathMatch","path","window","location","pathname","match","AppHeader","isDrawerOpen","handleToggleDrawer","setState","isScreenDeviceLarge","outerWidth","Menu","_ref5","MenuList_default","component","disablePadding","MenuItem_default","activeClassName","NavLink","isActive","common_AppIcon_AppIcon","Toolbar_default","layouts_AppLogo_AppLogo","Hidden_default","smDown","mdUp","IconButton_default","onClick","Menu_default","Drawer_default","anchor","open","onClose","Route","render","_ref","Tabs_default","value","indicatorColor","textColor","variant","scrollButtons","centered","Tab_default","label","_ref2","_ref3","_ref4","maxWidth","values","lg","margin","AppContainer","disablePaddingStyles","indexOf","paddingTop","paddingBottom","children","objectSpread","ListItemText","ListItemText_title","&>span","title","Grid_socials","textAlign","down","Divider","Divider_bottom","marginTop","LogoSection","Grid_default","item","xs","md","container","target","href","Typography_default","Divider_default","layouts_AppContainer_AppContainer","only","AppFooter_LogoSection","List_default","ListItem_default","dense","ListItemText_default","button","& [role=tablist]>span","borderTopLeftRadius","shape","borderRadius","borderTopRightRadius","secondary","dark","&+button","SwipeableViews","borderBottom","borderBottomColor","Card","borderWidth","divider","main","states","hover","Card_selected","selected","CardMedia","CardHeader","CardActions","CardHeader_title","overflow","textOverflow","Button_addCaption","TextField","sm","common","white","Icon","input_uploadFile","tabContent","Typography_uploadFile","gridContainer","position","maxHeight","Typography_emptyMessage","left","right","top","bottom","progressContainer","uploadingContainer","LinearProgress","TabContainer","ImageManager","labels","images","DEMO_IMAGES_DATA","selectedImageUrl","activeTabIndex","searchQuery","handleTabChange","event","handleTabSwipe","handleSelect","imageUrl","handleSelectFromDevice","handleSelectFromUrl","handleUpload","handleUploadCancel","handleSearchQueryChange","filteredImages","filter","length","handleSearchQueryClear","swipeableActions","updateHeight","_this2","onChange","chooseTab","uploadTab","lib_default","animateHeight","action","actions","index","onChangeIndex","ImageManager_TabContainer","TextField_default","placeholder","search","type","fullWidth","InputProps","startAdornment","Search_default","endAdornment","InputAdornment_default","aria-label","Clear_default","key","Card_default","url","CardHeader_default","CardMedia_default","CardActions_default","Button_default","selectButton","CircularProgress_default","accept","multiple","htmlFor","Button","AddPhotoAlternate_default","LinearProgress_default","Grid_control","colorPickerContainer","&[hidden]","control_dense","Radio_color","Radio_color_checked","Grid_controls","HuePicker","colorPickerCheckbox","colorPickerCheckbox_checked","TextEditor","styleTypes","WebkitTextStrokeWidth","WebkitTextStrokeColor","fontStyle","textShadow","lineHeight","isColorPickerShow","isTextStrokeColorPickerShow","handlePropertyChange","name","checked","handleStyleTypeChange","handleStylePropertyChange","handleTextColorChange","hex","handleTextStrokeColorChange","_this$props","_this$state","rows","multiline","defaultValue","inputProps","FormControl_default","Select_default","input","OutlinedInput_default","styleType","Radio_default","FormatAlignLeft_default","checkedIcon","FormatAlignCenter_default","FormatAlignRight_default","Checkbox_default","FormatBold_default","FormatSize_default","FormatItalic_default","disableRipple","Lens_default","ExpandMore_default","ExpandLess_default","hidden","react_color_lib","InputLabelProps","shrink","FormControlLabel","&[aria-selected=true] img","Radio","IconList","selectedIcon","icons","DEMO_ICONS_DATA","iconIndex","FormControlLabel_default","aria-selected","String","control","Typography_title","canvasContainer","CircularProgress","zIndex","canvas","canvas_state_ready","whiteSpace","&:not(:last-child)","IconButton_closeDialog","error","Dialog","&>div>div","DialogContent","Button_copyStyles","TextDialog","Dialog_default","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","MemeEditor_TextEditor","DialogActions_default","IconDialog","MemeEditor_IconList","MemeEditor","imageWidth","imageHeight","isTextDialogOpen","isIconDialogOpen","handleTextDialogToggle","handleIconDialogToggle","refs","canvasContext","getContext","Image","onload","drawImage","classList","add","MemeEditor_TextDialog","MemeEditor_IconDialog","ref","FormatShapes_default","InsertEmoticon_default","Grid_label","Typography_label","Button_copy","copyToClipboard","copyString","element","document","body","appendChild","select","execCommand","removeChild","CopyField","isCopiedMessageShow","handleCopy","handleCopiedMessageHide","reason","readOnly","Snackbar_default","autoHideDuration","message","&:last-child","EmbedList","embedList","embed","common_CopyField_CopyField","_Button_large","root_grouped","flexWrap","root_rounded","IconButton_rounded","Button_large","flex","&:first-child","&:nth-child(3)","&:nth-child(4)","borderBottomLeftRadius","borderBottomRightRadius","buttonList","listStyle","ShareLinkLarge","RedditShareButton","FacebookShareButton","TwitterShareButton","GooglePlusShareButton","PinterestShareButton","EmailShareButton","ShareLinkSmall","ShareLink","buttonsVariant","ShareLink_ShareLinkLarge","ShareLink_ShareLinkSmall","AppContainer_top","imageContainer","image_state_ready","ShareOrDownload","ShareOrDownload_title","ShareImage","onLoad","common_ShareLink_ShareLink","download","onCreateNew","tools_EmbedList_EmbedList","header","actionContainer","MemeImageManager","gutterBottom","tools_ImageManager_ImageManager","MemeMaker","activeStep","handleGoNext","scrollToTop","handleGoBack","handleReset","scrollIntoView","steps","content","MemeMaker_MemeImageManager","tools_MemeEditor_MemeEditor","tools_ShareImage_ShareImage","lastStep","disabled","Grid_item","tools_MemeMaker_MemeMaker","Typography_message","Icon_check","Processing","isLoading","setTimeout","CheckCircle_default","Button_download","SaveAlt_default","Snackbar","SnackbarContent","SnackbarContent_error","SnackbarContent_warning","SnackbarContent_info","messageContent","IconButton_removeMessage","MessageStack","messages","handleRemoveMessage","splice","SnackbarContent_default","Error_default","Warning_default","Info_default","dashedBorderImageDark","dropzone_isActive","dashedBorderImageSecondary","flexDirection","List_file","ListItem_file","transitionProperty","dashedBorderImagePrimary","ListItemText_file","ListItemSecondaryAction_file","transform","LinearProgress_file","tabsContainer","uploadInfo","FileUploadManager","maxFiles","maxFileSize","files","isFileLoading","errorMessages","handleFileDownload","preventDefault","handleUrlChange","handleDrop","acceptedFiles","rejectedFiles","toConsumableArray","forEach","rejectedFile","push","common_MessageStack_MessageStack","es","onDrop","getRootProps","getInputProps","isDragActive","FileUploadManager_TabContainer","assign","AttachFile_default","selectFiles","dropFiles","onSubmit","file","ListItemIcon_default","ListItemSecondaryAction_default","uploaded","Delete_default","Fragment","ImageResizeTool","handleFileSelect","selectedFiles","handleNext","history","tools_FileUploadManager_FileUploadManager","common_Processing_Processing","withRouter","tools_ImageResizeTool_ImageResizeTool","Grid_container","Stepper_default","orientation","Step_default","StepLabel_default","actionsContainer","Button_action","SplitManager","ImageBulkResizeTool","handleBack","tools_ImageBulkResizeTool_ImageBulkResizeTool","ImageCompressTool","tools_ImageCompressTool_ImageCompressTool","PdfResizeTool","handleFileUpload","tools_PdfResizeTool_PdfResizeTool","PdfCompressTool","tools_PdfCompressTool_PdfCompressTool","documentsContainer","coverContainer","coverWrapper","backgroundPosition","backgroundRepeat","cover","CardContent","IconButton","IconButton_remove","Typography_documentName","isSticky","PdfMergeTool","handleFileRemove","fileIndex","handleUpdateRotationAngle","fileRotationAngle","rotationAngle","Grid","CardContent_default","RotateRight_default","tools_PdfMergeTool_PdfMergeTool","List_range","ListItem_range","Grid_range","TextField_range","Grid_removeAction","Button_addRange","contentActionsContainer","ranges","from","needMergeInSingleFile","handleToggleCheckbox","checkboxStateProperty","checkStatus","handleAddRange","handleRemoveRange","rangeIndex","SplitManager_TabContainer","range","PdfSplitTool","tools_SplitManager_SplitManager","tools_PdfSplitTool_PdfSplitTool","converterPath","replace","converterPathItems","split","convertFrom","toUpperCase","convertTo","Button_getStarted","section","AppRouter","scrollTo","HashRouter","Switch","exact","MemeMakerPage","ImageResizePage","ImageBulkResizePage","ImageCompressPage","ImageFeaturesPage","PdfResizePage","PdfCompressPage","PdfMergePage","PdfSplitPage","ConverterPage","FeatureCroppingPage","FeatureEditingPage","FeatureCompressingPage","TermsOfServicePage","PrivacyPage","HelpPage","NotFoundPage","lightBlue","contrastText","lightGreen","red","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","fontFamily","createMuiTheme","xl","shadows","background","default","useNextVariants","headline","subheading","body2","body1","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1Next","body2Next","buttonNext","captionNext","overline","App","core_styles","CssBaseline_default","layouts_AppHeader_AppHeader","layouts_AppRouter_AppRouter","layouts_AppFooter_AppFooter","Boolean","hostname","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2f24744.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AppLogo.a6e672ea.svg\";","var map = {\n\t\"./converter.svg\": 388,\n\t\"./envelope.svg\": 389,\n\t\"./facebook.svg\": 390,\n\t\"./facebook_dark.svg\": 391,\n\t\"./features.svg\": 392,\n\t\"./file.svg\": 393,\n\t\"./google-plus.svg\": 394,\n\t\"./google-plus_dark.svg\": 395,\n\t\"./image.svg\": 396,\n\t\"./pdf.svg\": 397,\n\t\"./pinterest.svg\": 398,\n\t\"./reddit.svg\": 399,\n\t\"./twitter.svg\": 400,\n\t\"./twitter_dark.svg\": 401\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 387;","module.exports = __webpack_public_path__ + \"static/media/converter.5480b032.svg\";","module.exports = __webpack_public_path__ + \"static/media/envelope.97c6ff6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.6719b995.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook_dark.befd3df9.svg\";","module.exports = __webpack_public_path__ + \"static/media/features.9acc7a39.svg\";","module.exports = __webpack_public_path__ + \"static/media/file.664a60a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-plus.1675d4be.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-plus_dark.62779c42.svg\";","module.exports = __webpack_public_path__ + \"static/media/image.6c9a1d79.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf.9bf281f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinterest.f46ccf22.svg\";","module.exports = __webpack_public_path__ + \"static/media/reddit.ad333fe7.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.7a4d9f0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter_dark.5b79f60c.svg\";","module.exports = __webpack_public_path__ + \"static/media/PdfMergeTool.cover.931870f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/cropping-1.57662d5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cropping-2.eac36616.jpg\";","module.exports = __webpack_public_path__ + \"static/media/editing-1.96297a31.jpg\";","module.exports = __webpack_public_path__ + \"static/media/editing-2.1441f535.jpg\";","module.exports = __webpack_public_path__ + \"static/media/editing-3.8ba3a929.jpg\";","module.exports = __webpack_public_path__ + \"static/media/editing-4.d5952c31.jpg\";","module.exports = __webpack_public_path__ + \"static/media/compressing-1.765607dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/compressing-2.63f13d12.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background-left.53afa4fa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background-right.3dc9c346.jpg\";","const styles = theme => ({\n    root: {\n        display: 'inline-flex',\n        transition: theme.transitions.create(),\n        '&:hover': {\n            opacity: .64\n        }\n    },\n    image: {\n        width: '100%'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AppLogoImage from './AppLogo.svg';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './AppLogo.styles';\n\nconst AppLogo = (props) => (\n    <Link \n        className={classNames(props.className, props.classes.root)} \n        to=\"/\"\n    >\n        <img \n            className={props.classes.image} \n            src={AppLogoImage} \n            alt=\"ImageResize.org Logo\" \n        />\n    </Link>\n);\n \nAppLogo.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppLogo);","const styles = theme => ({\n    root: {\n        display: 'inline-flex',\n        backgroundSize: 'cover',\n        transition: theme.transitions.create()\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n// Styles\nimport styles from './AppIcon.styles';\n\nclass AppIcon extends React.Component {\n    state = {\n        size: \n            this.props.size === 'large' ? 32 : \n            this.props.size === 'small' ? 20 : 24\n    };\n\n    render() {\n        const { props, state } = this;\n        const { classes } = props;\n        const { size } = state;\n        const styles = props.icon ? {\n            backgroundImage: 'url(' + require(`../../../assets/icons/${props.icon}.svg`) + ')',\n            width: size,\n            height: size,\n            minWidth: size,\n            minHeight: size\n        } : null;\n\n        return (\n            <i className={classNames(props.className, classes.root)} style={styles}></i>\n        );\n    }\n}\n\nAppIcon.propTypes = {\n    classes: PropTypes.object.isRequired,\n    icon: PropTypes.string.isRequired,\n    size: PropTypes.oneOf(['small', 'medium', 'large'])\n};\n\nexport default withStyles(styles)(AppIcon);","const styles = theme => ({\n    root: {},\n    AppLogo: {\n        padding: theme.spacing.unit * 2.5,\n    },\n    Toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        paddingRight: 0,\n        paddingLeft: 0,\n        borderColor: theme.palette.border.light,\n        borderStyle: 'solid',\n        borderTopWidth: 0,\n        borderBottomWidth: 1,\n        borderLeftWidth: 0,\n        borderRightWidth: 0,\n    },\n    MenuList: {\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n            marginLeft: 'auto'\n        }\n    },\n    MenuItem: {\n        fontSize: theme.typography.fontSize,\n        textTransform: 'uppercase',\n        '&>i': {\n            opacity: .5\n        },\n        '&:hover>i': {\n            opacity: 1\n        },\n        '&:hover': {\n            color: theme.palette.text.primary,\n            backgroundColor: 'initial'\n        },\n        [theme.breakpoints.up('md')]: {\n            padding: theme.spacing.unit * 3 + 4,            \n            borderStyle: 'solid',\n            borderLeftWidth: 1,\n            borderColor: theme.palette.border.light,\n        }\n    },\n    MenuItem_selected: {\n        backgroundColor: theme.palette.grey[50],\n        boxShadow: theme.palette.grey[50] + ' 0 2px 0 0',\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n        marginBottom: -1,\n        '&>i': {\n            opacity: 1\n        },\n        '&:hover': {\n            backgroundColor: theme.palette.grey[50]\n        }\n    },\n    AppIcon: {\n        marginRight: 12\n    },\n    Tabs: {\n        borderColor: theme.palette.border.light,\n        backgroundColor: theme.palette.grey[50],\n        borderStyle: 'solid',\n        borderTopWidth: 0,\n        borderBottomWidth: 1,\n        borderLeftWidth: 0,\n        borderRightWidth: 0\n    },\n    Tab: {\n        textTransform: 'initial',\n        fontWeight: 'initial',\n        fontSize: '1rem',\n        '&[aria-selected=true]': {\n            fontWeight: 500,\n            color: theme.palette.text.primary\n        },\n        '&:not([aria-selected=true]):hover': {\n            color: theme.palette.text.primary\n        },\n        [theme.breakpoints.up('md')]: {\n            minHeight: 70\n        }\n    },\n    IconButton_toggleDrawer: {\n        marginRight: theme.spacing.unit\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Route, NavLink } from 'react-router-dom';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Hidden from '@material-ui/core/Hidden';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppLogo from '../AppLogo/AppLogo';\nimport AppIcon from '../../common/AppIcon/AppIcon';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './AppHeader.styles';\n\nconst isPathMatch = (path) => !!window.location.pathname.match(path);\n\n\nclass AppHeader extends React.Component {\n    state = {\n        isDrawerOpen: false\n    }\n\n    handleToggleDrawer = () => {\n        this.setState({ isDrawerOpen: !this.state.isDrawerOpen });\n    }\n    \n    render() {\n        const { props } = this;\n        const { className, classes } = props;\n        const isScreenDeviceLarge = window.outerWidth > 600;\n\n        const ImageToolsTabs = ({ match, location }) => (\n            <Tabs\n                className={classes.Tabs}\n                value={location.pathname}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant={isScreenDeviceLarge ? 'standard' : 'scrollable'}\n                scrollButtons={isScreenDeviceLarge ? 'auto' : 'on'}\n                centered={isScreenDeviceLarge}\n            >\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/resize`}\n                    value={`${match.path}/resize`}\n                    label=\"Image Resize\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/bulk-resize`}\n                    value={`${match.path}/bulk-resize`}\n                    label=\"Bulk Resize\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/compress`}\n                    value={`${match.path}/compress`}\n                    label=\"Compress Images\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/features`}\n                    value={`${match.path}/features`}\n                    label=\"Features\"\n                />\n            </Tabs>\n        );\n        \n        const PdfToolsTabs = ({ match, location }) => (\n            <Tabs\n                className={classes.Tabs}\n                value={location.pathname}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant={isScreenDeviceLarge ? 'standard' : 'scrollable'}\n                scrollButtons={isScreenDeviceLarge ? 'auto' : 'on'}\n                centered={isScreenDeviceLarge}\n            >\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/resize`}\n                    value={`${match.path}/resize`}\n                    label=\"PDF Resize\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/compress`}\n                    value={`${match.path}/compress`}\n                    label=\"PDF Compress\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/merge`}\n                    value={`${match.path}/merge`}\n                    label=\"PDF Merge\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/split`}\n                    value={`${match.path}/split`}\n                    label=\"PDF Split\"\n                />\n            </Tabs>\n        );\n        \n        const ConvertToolsTabs = ({ match, location }) => (\n            <Tabs\n                className={classes.Tabs}\n                value={location.pathname}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant={isScreenDeviceLarge ? 'standard' : 'scrollable'}\n                scrollButtons={isScreenDeviceLarge ? 'auto' : 'on'}\n                centered={isScreenDeviceLarge}\n            >\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/jpg-to-pdf`}\n                    value={`${match.path}/jpg-to-pdf`}\n                    label=\"JPG to PDF\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/jpg-to-png`}\n                    value={`${match.path}/jpg-to-png`}\n                    label=\"JPG to PNG\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/pdf-to-jpg`}\n                    value={`${match.path}/pdf-to-jpg`}\n                    label=\"PDF to JPG\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/pdf-to-png`}\n                    value={`${match.path}/pdf-to-png`}\n                    label=\"PDF to PNG\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/png-to-jpg`}\n                    value={`${match.path}/png-to-jpg`}\n                    label=\"PNG to JPG\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/png-to-pdf`}\n                    value={`${match.path}/png-to-pdf`}\n                    label=\"PNG to PDF\"\n                />\n            </Tabs>\n        );\n        \n        const FeaturesTabs = ({ match, location }) => (\n            <Tabs\n                className={classes.Tabs}\n                value={location.pathname}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant={isScreenDeviceLarge ? 'standard' : 'scrollable'}\n                scrollButtons={isScreenDeviceLarge ? 'auto' : 'on'}\n                centered={isScreenDeviceLarge}\n            >\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/cropping`}\n                    value={`${match.path}/cropping`}\n                    label=\"Photo Cropping\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/editing`}\n                    value={`${match.path}/editing`}\n                    label=\"Photo Editing\"\n                />\n                <Tab\n                    className={classes.Tab} \n                    component={NavLink} \n                    to={`${match.path}/compressing`}\n                    value={`${match.path}/compressing`}\n                    label=\"Photo Compressing\"\n                />\n            </Tabs>\n        );\n        \n        const Menu = ({ classes }) => (\n            <MenuList \n                className={classes.MenuList}\n                component=\"nav\" \n                disablePadding\n            >\n                <MenuItem \n                    className={classes.MenuItem}\n                    activeClassName={classes.MenuItem_selected}\n                    component={NavLink}\n                    to=\"/image/resize\"\n                    isActive={() => isPathMatch('/image/')}\n                >\n                    <AppIcon className={classes.AppIcon} icon=\"image\" />\n                    Image Tools\n                </MenuItem>\n                <MenuItem \n                    className={classes.MenuItem}\n                    activeClassName={classes.MenuItem_selected}\n                    component={NavLink}\n                    to=\"/pdf/resize\"\n                    isActive={() => isPathMatch('/pdf/')}\n                >\n                    <AppIcon className={classes.AppIcon} icon=\"pdf\" />\n                    PDF Tools\n                </MenuItem>\n                <MenuItem \n                    className={classes.MenuItem}\n                    activeClassName={classes.MenuItem_selected}\n                    component={NavLink}\n                    to=\"/convert/jpg-to-pdf\"\n                    isActive={() => isPathMatch('/convert/')}\n                >\n                    <AppIcon className={classes.AppIcon} icon=\"converter\" />\n                    Convert Tools\n                </MenuItem>\n                <MenuItem \n                    className={classes.MenuItem}\n                    activeClassName={classes.MenuItem_selected}\n                    component={NavLink}\n                    to=\"/feature/cropping\"\n                    isActive={() => isPathMatch('/feature/')}\n                >\n                    <AppIcon className={classes.AppIcon} icon=\"features\" />\n                    Features\n                </MenuItem>\n            </MenuList>\n        );\n\n        return (\n            <header className={classNames(className, classes.root)}>\n                <Toolbar className={classes.Toolbar}>\n                    <AppLogo className={classes.AppLogo} />\n                    <Hidden smDown>\n                        <Menu classes={classes} />\n                    </Hidden>\n                    <Hidden mdUp>\n                        <IconButton\n                            className={classes.IconButton_toggleDrawer} \n                            onClick={this.handleToggleDrawer}>\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                </Toolbar>\n\n                <Hidden mdUp>\n                    <Drawer\n                        anchor=\"top\"\n                        open={this.state.isDrawerOpen} \n                        onClose={this.handleToggleDrawer}\n                    >\n                        <div onClick={this.handleToggleDrawer}>\n                            <Menu classes={classes} />\n                        </div>\n                    </Drawer>\n                </Hidden>\n    \n                <Route path=\"/image\" render={ImageToolsTabs} />\n                <Route path=\"/pdf\" render={PdfToolsTabs} />\n                <Route path=\"/convert\" render={ConvertToolsTabs} />\n                <Route path=\"/feature\" render={FeaturesTabs} />\n            </header>\n        );\n    }\n};\n\nAppHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppHeader);","const styles = theme => ({\n    root: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto',\n        padding: theme.spacing.unit * 2.5,\n        [theme.breakpoints.up('lg')]: {\n            padding: theme.spacing.unit * 7.5,\n        }\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './AppContainer.styles';\n\nclass AppContainer extends React.Component {\n    disablePaddingStyles = () => {\n        let disablePaddingStyles = {};\n        const disablePadding = this.props.disablePadding;\n        if (!disablePadding) return;\n        if (disablePadding.indexOf('top') > -1) disablePaddingStyles.paddingTop = 0;\n        if (disablePadding.indexOf('bottom') > -1) disablePaddingStyles.paddingBottom = 0;\n        if (disablePadding.indexOf('left') > -1) disablePaddingStyles.paddingLeft = 0;\n        if (disablePadding.indexOf('right') > -1) disablePaddingStyles.paddingRight = 0;\n\n        return disablePaddingStyles;\n    }\n\n    render() {\n        const { props } = this;\n        const { className, classes, children, maxWidth } = props;\n\n        return (\n            <div \n                className={classNames(className, classes.root)} \n                style={{\n                    maxWidth: (maxWidth === 'sm') ? 640 : (maxWidth === 'md') ? 870 : 1170,\n                    ...this.disablePaddingStyles()\n                }}>\n                {children}\n            </div>\n        )\n    }\n};\n\nAppContainer.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppContainer);","const styles = theme => ({\n    root: {},\n    AppLogo: {\n        maxWidth: 175,\n        marginBottom: theme.spacing.unit * 2.5,\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 5,\n        }\n    },\n    ListItemText: {\n        padding: 0,\n        [theme.breakpoints.up('md')]: {\n            fontSize: '.875rem',\n        }\n    },\n    ListItemText_title: {\n        padding: 0,\n        '&>span': {\n            color: theme.typography.title.color,\n            fontWeight: 500,\n        },\n        [theme.breakpoints.up('md')]: {\n            fontSize: '.875rem',\n        }\n    },\n    Grid_socials: {\n        textAlign: 'center',\n        maxWidth: 175,\n        marginBottom: theme.spacing.unit * 2.5,\n        [theme.breakpoints.down('md')]: {\n            marginLeft: 'auto',\n            marginRight: 'auto'\n        }\n    },\n    Divider: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto'\n    },\n    Divider_bottom: {\n        [theme.breakpoints.down('md')]: {\n            marginTop: theme.spacing.unit * 2.5\n        }\n    },\n    LogoSection: {\n        [theme.breakpoints.down('md')]: {\n            textAlign: 'center',\n            paddingTop: theme.spacing.unit * 2.5,\n            paddingBottom: theme.spacing.unit * 2.5\n        }\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport List  from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\nimport Hidden from '@material-ui/core/Hidden'\nimport IconButton from '@material-ui/core/IconButton';\nimport AppContainer from '../AppContainer/AppContainer';\nimport AppLogo from '../AppLogo/AppLogo';\nimport AppIcon from '../../common/AppIcon/AppIcon';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './AppFooter.styles';\n\nconst LogoSection = ({ className, classes }) => (\n    <Grid item xs={12} md={3} lg={4} className={className}>\n        <AppLogo className={classes.AppLogo}></AppLogo>\n        <Grid className={classes.Grid_socials} container>\n            <Grid item xs={4}>\n                <IconButton \n                    component=\"a\" \n                    target=\"_blank\" \n                    href=\"https://twitter.com/\"\n                >\n                    <AppIcon \n                        className={classes.AppIcon} \n                        icon=\"twitter_dark\" \n                        size=\"small\"></AppIcon>\n                </IconButton>\n            </Grid>\n            <Grid item xs={4}>\n                <IconButton \n                    component=\"a\" \n                    target=\"_blank\" \n                    href=\"https://www.facebook.com/\"\n                >\n                    <AppIcon \n                        className={classes.AppIcon} \n                        icon=\"facebook_dark\" \n                        size=\"small\"></AppIcon>\n                </IconButton>\n            </Grid>\n            <Grid item xs={4}>\n                <IconButton \n                    component=\"a\" \n                    target=\"_blank\" \n                    href=\"https://plus.google.com/\"\n                >\n                    <AppIcon \n                        className={classes.AppIcon} \n                        icon=\"google-plus_dark\" \n                        size=\"small\"></AppIcon>\n                </IconButton>\n            </Grid>\n        </Grid>\n        <Typography component=\"div\">© 2013 - 2018 Imageresize.org</Typography>\n    </Grid>\n);\n\nconst AppFooter = ({ className, classes }) => (\n    <footer className={classNames(className, classes.root)}>\n        <Divider className={classes.Divider} />\n        <AppContainer>\n            <Grid container>\n                <Hidden only={['xs', 'sm']}>\n                    <LogoSection classes={classes} />\n                </Hidden>\n                <Grid item xs={12} md={9} lg={8}>\n                    {/* Menus */}\n                    <Grid container>\n                        <Grid item xs={6} md={3}>\n                            <List disablePadding component=\"nav\">\n                                <ListItem dense={true}>\n                                    <ListItemText className={classes.ListItemText_title} primary=\"Image Tools\" />\n                                </ListItem>\n                                <ListItem button dense={true} component={Link} to=\"/image/resize\">\n                                    <ListItemText className={classes.ListItemText} primary=\"Image Resize\" />\n                                </ListItem>\n                                <ListItem button dense={true} component={Link} to=\"/image/bulk-resize\">\n                                    <ListItemText className={classes.ListItemText} primary=\"Bulk Image Resize\" />\n                                </ListItem>\n                                <ListItem button dense={true} component={Link} to=\"/image/compress\">\n                                    <ListItemText className={classes.ListItemText} primary=\"Image Compressor\" />\n                                </ListItem>\n                            </List>\n                        </Grid>\n                        <Grid item xs={6} md={3}>\n                            <List disablePadding component=\"nav\">\n                                <ListItem dense={true}>\n                                    <ListItemText className={classes.ListItemText_title} primary=\"Features\" />\n                                </ListItem>\n                                <ListItem button dense={true} component={Link} to=\"/feature/cropping\">\n                                    <ListItemText className={classes.ListItemText} primary=\"Crop Images\" />\n                                </ListItem>\n                                <ListItem button dense={true} component={Link} to=\"/feature/editing\">\n                                    <ListItemText className={classes.ListItemText} primary=\"Photo Filters\" />\n                                </ListItem>\n                                <ListItem button dense={true} component={Link} to=\"/feature/compressing\">\n                                    <ListItemText className={classes.ListItemText} primary=\"Photo Adjust\" />\n                                </ListItem>\n                            </List>\n                        </Grid>\n                        <Grid item xs={6} md={3}>\n                            <List disablePadding component=\"nav\">\n                                <ListItem dense={true}>\n                                    <ListItemText className={classes.ListItemText_title} primary=\"About\" />\n                                </ListItem>\n                                <ListItem button dense={true} component={Link} to=\"/contact\">\n                                    <ListItemText className={classes.ListItemText} primary=\"Contact\" />\n                                </ListItem>\n                                <ListItem button dense={true} component={Link} to=\"/help\">\n                                    <ListItemText className={classes.ListItemText} primary=\"Help\" />\n                                </ListItem>\n                                <ListItem button dense={true} component={Link} to=\"/feedback\">\n                                    <ListItemText className={classes.ListItemText} primary=\"Feedback\" />\n                                </ListItem>\n                            </List>\n                        </Grid>\n                        <Grid item xs={6} md={3}>\n                            <List disablePadding component=\"nav\">\n                                <ListItem dense={true}>\n                                    <ListItemText className={classes.ListItemText_title} primary=\"Legal\" />\n                                </ListItem>\n                                <ListItem button dense={true} component={Link} to=\"/privacy\">\n                                    <ListItemText className={classes.ListItemText} primary=\"Privacy\" />\n                                </ListItem>\n                                <ListItem button dense={true} component={Link} to=\"/terms-of-service\">\n                                    <ListItemText className={classes.ListItemText} primary=\"Terms of Service\" />\n                                </ListItem>\n                            </List>\n                        </Grid>\n                    </Grid>\n                    {/* /Menus */}\n                </Grid>\n                <Hidden only={['md', 'lg', 'xl']}>\n                    <Grid item xs={12}> \n                        <Divider className={classes.Divider_bottom} />\n                    </Grid>\n                    <LogoSection className={classes.LogoSection} classes={classes} />\n                </Hidden>\n            </Grid>\n        </AppContainer>\n    </footer>\n);\n\nAppFooter.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppFooter);","const styles = theme => ({\n    root: {\n\n    },\n    Tabs: {\n        marginBottom: -1,\n        '& [role=tablist]>span': {\n            display: 'none'\n        }\n    },\n    Tab: {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius,\n        border: '1px solid',\n        borderColor: theme.palette.border.light,\n        borderBottomWidth: 0,\n        backgroundColor: 'initial',\n        textTransform: 'initial',\n        fontWeight: 500,\n        fontSize: '1rem',\n        color: theme.palette.text.secondary,\n        transition: theme.transitions.create(),\n        '&:not([aria-selected=true]):hover': {\n            borderColor: theme.palette.border.dark,\n            color: theme.palette.text.primary\n        },\n        '&[aria-selected=true]': {\n            backgroundColor: theme.palette.grey[50],\n            borderColor: theme.palette.border.dark,\n            color: theme.palette.text.primary\n        },\n        '&+button': {\n            marginLeft: -1\n        }\n    },\n    SwipeableViews: {\n        border: '1px solid',\n        borderColor: theme.palette.border.dark,\n        borderRadius: theme.shape.borderRadius,\n        borderTopLeftRadius: 0\n    },\n    Toolbar: {\n        padding: theme.spacing.unit * 2.5,\n        borderBottom: '1px solid',\n        borderBottomColor: theme.palette.border.dark,\n        backgroundColor: theme.palette.grey[50]\n    },\n    Card: {\n        borderStyle: 'solid',\n        borderWidth: 1,\n        borderColor: theme.palette.divider,\n        transition: theme.transitions.create(),\n        '&:hover': {\n            borderColor: theme.palette.primary.main,\n            boxShadow: theme.states.hover.boxShadow\n        }\n    },\n    Card_selected: {\n        borderColor: theme.palette.primary.main,\n        boxShadow: theme.states.selected.boxShadow,\n        '&:hover': {\n            boxShadow: theme.states.selected.boxShadow\n        }\n    },\n    CardMedia: {\n        height: 120\n    },\n    CardHeader: {\n        padding: theme.spacing.unit * 1.5\n    },\n    CardActions: {\n        padding: theme.spacing.unit\n    },\n    CardHeader_title: {\n        height: '3em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        textAlign: 'center',\n        color: theme.palette.grey[700]\n    },\n    Button_addCaption: {\n        margin: 0\n    },\n    TextField: {\n        maxWidth: theme.breakpoints.values.sm,\n        margin: 'auto',\n        backgroundColor: theme.palette.common.white\n    },\n    Icon: {\n        marginRight: theme.spacing.unit\n    },\n    input_uploadFile: {\n        display: 'none',\n    },\n    tabContent: {\n        textAlign: 'center',\n        padding: theme.spacing.unit * 2.5,\n        backgroundColor: theme.palette.grey[50],\n        [theme.breakpoints.up('md')]: {\n            padding: theme.spacing.unit * 5,\n        }\n    },\n    Typography_uploadFile: {\n        paddingTop: theme.spacing.unit * 2.5,\n        paddingBottom: theme.spacing.unit * 2.5,\n    },\n    gridContainer: {\n        position: 'relative',\n        padding: theme.spacing.unit * 2,\n        minHeight: 480,\n        maxHeight: 520,\n        overflow: 'auto'\n    },\n    Typography_emptyMessage: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        margin: 'auto',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    progressContainer: {\n        paddingTop: theme.spacing.unit * 2.5,\n        textAlign: 'center'\n    },\n    uploadingContainer: {\n        marginTop: theme.spacing.unit * 2.5,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n    },\n    LinearProgress: {\n        width: '100%',\n        maxWidth: 750\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableViews from 'react-swipeable-views';\nimport Typography from '@material-ui/core/Typography';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ImageManager.styles';\n// DEMO DATA\nimport DEMO_IMAGES_DATA from '../../../assets/demo/data/images.json';\n\nconst TabContainer = ({ className, children }) => (\n    <Typography className={className || ''} component=\"div\">\n        {children}\n    </Typography>\n);\n  \nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass ImageManager extends React.Component {\n    state = {\n        labels: this.props.labels || {},\n        images: DEMO_IMAGES_DATA || [],\n        selectedImageUrl: null,\n        activeTabIndex: 0,\n        searchQuery: ''\n    };\n\n    componentDidUpdate() {\n        this.swipeableActions.updateHeight();\n    }\n    \n    handleTabChange = (event, activeTabIndex) => {\n        this.setState({ activeTabIndex });\n    };\n\n    handleTabSwipe = (activeTabIndex) => {\n        this.setState({ activeTabIndex });\n    };\n\n    handleSelect = (imageUrl) => {\n        this.setState({ selectedImageUrl: imageUrl });\n    }\n\n    handleSelectFromDevice = () => {}\n\n    handleSelectFromUrl = () => {}\n\n    handleUpload = () => {}\n    \n    handleUploadCancel = () => {}\n\n    handleSearchQueryChange = (event) => {\n        const searchQuery = event.target.value;\n        const filteredImages = DEMO_IMAGES_DATA.filter(image => image.title.indexOf(searchQuery) > -1);\n        const images = searchQuery.length > 0 ? filteredImages : DEMO_IMAGES_DATA;\n\n        this.setState({ images });\n        this.setState({ searchQuery });\n    }\n\n    handleSearchQueryClear = () => {\n        this.setState({ searchQuery: '' });\n        this.setState({ images: DEMO_IMAGES_DATA });\n    }\n\n    render() {\n        const { state, props } = this;\n        const { className, classes } = props;\n        const { labels, activeTabIndex, searchQuery } = state;\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                <Tabs\n                    className={classes.Tabs}\n                    value={activeTabIndex}\n                    onChange={this.handleTabChange}\n                    indicatorColor=\"primary\">\n                    <Tab \n                        className={classes.Tab}\n                        label={labels.chooseTab || 'Choose Image'} />\n                    <Tab \n                        className={classes.Tab} \n                        label={labels.uploadTab || 'Upload Image'} />\n                </Tabs>\n                <SwipeableViews\n                    className={classes.SwipeableViews} \n                    animateHeight\n                    action={(actions) => {this.swipeableActions = actions}}\n                    index={activeTabIndex}\n                    onChangeIndex={this.handleTabSwipe}>\n                    <TabContainer className={classes.TabContainer}>\n                        <Toolbar className={classes.Toolbar}>\n                            <TextField\n                                id=\"search\"\n                                placeholder={labels.search || 'Search'}\n                                type=\"text\"\n                                margin=\"normal\"\n                                fullWidth\n                                variant=\"outlined\"\n                                className={classes.TextField}\n                                InputProps={{\n                                    startAdornment: <SearchIcon className={classes.Icon} />,\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"Clear Search String\"\n                                                onClick={this.handleSearchQueryClear}>\n                                                <ClearIcon fontSize=\"small\" />\n                                            </IconButton>\n                                        </InputAdornment>\n                                    )\n                                }}\n                                value={searchQuery}\n                                onChange={this.handleSearchQueryChange}\n                            />\n                        </Toolbar>\n                        <div className={classes.gridContainer}>\n                            <Grid container spacing={16}>\n                                {state.images.map((image, index) => \n                                    <Grid item xs={6} sm={4} md={3} lg={2} key={index}>\n                                        <Card \n                                            className={classNames(classes.Card, (state.selectedImageUrl === image.url) ? classes.Card_selected : null)}\n                                            onClick={() => this.handleSelect(image.url)}\n                                        >\n                                            <CardHeader \n                                                className={classes.CardHeader}\n                                                title={\n                                                    <Typography component=\"h3\" className={classes.CardHeader_title}>{image.title}</Typography>\n                                                } />\n                                            <CardMedia image={image.url} className={classes.CardMedia} />\n                                            <CardActions className={classes.CardActions}>\n                                                <Button \n                                                    className={classes.Button_addCaption} \n                                                    variant=\"outlined\" \n                                                    fullWidth \n                                                    size=\"small\"\n                                                >{labels.selectButton || 'Select'}</Button>\n                                            </CardActions>\n                                        </Card>\n                                    </Grid>\n                                )}\n                                {state.images.length === 0 ? (\n                                    <Typography \n                                        className={classes.Typography_emptyMessage}\n                                        variant=\"body1\">No memes found</Typography>\n                                ) : null}\n                            </Grid>\n                            {state.images.length > 0 ? (\n                                <div className={classes.progressContainer}>\n                                    <CircularProgress />\n                                </div>\n                            ) : null}\n                        </div>\n                    </TabContainer>\n                    <TabContainer className={classes.TabContainer}>\n                        <div className={classes.tabContent}>\n                            <input\n                                accept=\"image/*\"\n                                className={classes.input_uploadFile}\n                                id=\"upload-file\"\n                                multiple\n                                type=\"file\"\n                                onChange={this.handleSelectFromDevice}\n                            />\n                            <label htmlFor=\"upload-file\">\n                                <Button \n                                    variant=\"contained\"\n                                    size=\"large\" \n                                    color=\"secondary\" \n                                    component=\"span\" \n                                    className={classes.Button}\n                                >\n                                    <AddPhotoAlternateIcon className={classes.Icon} /> \n                                    Choose Image\n                                </Button>\n                            </label>\n                            <Typography className={classes.Typography_uploadFile} variant=\"body1\">or, drop Image here</Typography>\n                            <TextField\n                                className={classes.TextField}\n                                id=\"file-url\"\n                                variant=\"outlined\"\n                                fullWidth\n                                placeholder=\"http://\"\n                                type=\"url\"\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"large\"\n                                                color=\"secondary\"\n                                                onClick={this.handleSelectFromUrl}\n                                            >Go</Button>\n                                        </InputAdornment>\n                                    )\n                                }} />\n                            <div className={classes.uploadingContainer}>\n                                <LinearProgress \n                                    className={classes.LinearProgress}\n                                    color=\"secondary\" \n                                    variant=\"determinate\" \n                                    value={80} />\n                                <IconButton\n                                    aria-label=\"Remove uploading\"\n                                    onClick={this.handleUploadCancel}>\n                                    <ClearIcon fontSize=\"small\" />\n                                </IconButton>\n                            </div>\n                        </div>\n                    </TabContainer>\n                </SwipeableViews>\n            </div>\n        );\n    }\n}\n\nImageManager.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ImageManager);","const styles = theme => ({\n    root: {},\n    Grid_control: {\n        alignItems: 'center',\n        marginBottom: theme.spacing.unit * 4\n    },\n    colorPickerContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        '&[hidden]': {\n            display: 'none'\n        }\n    },\n    label: {\n        [theme.breakpoints.down('md')]: {\n            marginBottom: theme.spacing.unit\n        }\n    },\n    control_dense: {\n        padding: theme.spacing.unit / 2,\n        marginRight: theme.spacing.unit\n    },\n    Radio_color: {\n        padding: theme.spacing.unit / 2,\n        marginRight: theme.spacing.unit,\n        boxShadow: `${theme.palette.grey[200]} 0 0 0 2px inset`,\n        transition: theme.transitions.create()\n    },\n    Radio_color_checked: {\n        boxShadow: `${theme.palette.primary.main} 0 0 0 2px inset`\n    },\n    Grid_controls: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    HuePicker: {\n        marginTop: theme.spacing.unit * 3,\n        width: '100%!important'\n    },\n    colorPickerCheckbox: {\n        padding: theme.spacing.unit / 2,\n        borderRadius: 0,\n        boxShadow: `${theme.palette.grey[200]} 0 0 0 2px inset`,\n        transition: theme.transitions.create()\n    },\n    colorPickerCheckbox_checked: {\n        boxShadow: `${theme.palette.primary.main} 0 0 0 2px inset`\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { HuePicker } from 'react-color';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatSizeIcon from '@material-ui/icons/FormatSize';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport LensIcon from '@material-ui/icons/Lens';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './TextEditor.styles';\n\nclass TextEditor extends React.Component {\n    styleTypes = [\n        {\n            fontSize: 20,\n            color: '#616161',\n            textAlign: 'center',\n            WebkitTextStrokeWidth: 0,\n            WebkitTextStrokeColor: '#000000',\n            fontWeight: 'normal',\n            fontStyle: 'normal',\n            textTransform: 'uppercase',\n            textShadow: 'none',\n            lineHeight: 2.4\n        },\n        {\n            fontSize: 24,\n            color: '#1A8D5F',\n            textAlign: 'right',\n            WebkitTextStrokeWidth: 0,\n            WebkitTextStrokeColor: '#000000',\n            fontWeight: 'bold',\n            fontStyle: 'normal',\n            textTransform: 'uppercase',\n            textShadow: 'none',\n            lineHeight: 2.4\n        },\n        {\n            fontSize: 32,\n            color: '#D0021B',\n            textAlign: 'left',\n            WebkitTextStrokeWidth: 0,\n            WebkitTextStrokeColor: '#000000',\n            fontWeight: 'normal',\n            fontStyle: 'normal',\n            textTransform: 'uppercase',\n            textShadow: 'none',\n            lineHeight: 2.4\n        }\n    ];\n    state = {\n        text: 'This is my image text',\n        styles: this.styleTypes[0],\n        styleTypes: this.styleTypes,\n\n        isColorPickerShow: false,\n        isTextStrokeColorPickerShow: false,\n    };\n\n    handlePropertyChange = ({ target }) => {\n        this.setState({ [target.name]: target.value ? target.value : target.checked });\n    }\n\n    handleStyleTypeChange = ({ target }) => {\n        this.setState({ styles: target.value });\n    };\n\n    handleStylePropertyChange = ({ target }) => {\n        const styles = {...this.state.styles};\n        styles[target.name] = target.value ? target.value : target.checked;\n        this.setState({ styles: styles });\n    };\n\n    handleTextColorChange = ({ hex }) => {\n        const styles = {...this.state.styles};\n        styles.color = hex;\n        this.setState({ styles: styles });\n    }\n\n    handleTextStrokeColorChange = ({ hex }) => {\n        const styles = {...this.state.styles};\n        styles.WebkitTextStrokeColor = hex;\n        this.setState({ styles: styles });\n    }\n\n    render() {\n        const { className, classes } = this.props;\n        const { styleTypes, text, styles } = this.state;\n        \n        return (\n            <div className={classNames(className, classes.root)}>\n                <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                        <TextField\n                            rows={1}\n                            multiline\n                            defaultValue={text}\n                            variant=\"outlined\"\n                            fullWidth\n                            inputProps={{ style: styles }}\n                            onChange={this.handleStylePropertyChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        {/* Row */}\n                        <Grid container className={classes.Grid_control}>\n                            <Grid item xs={12} md={4}>\n                                <Typography\n                                    className={classes.label} \n                                    variant=\"body1\">Type</Typography>\n                            </Grid>\n                            <Grid item xs={12} md={8}>\n                                <FormControl variant=\"outlined\" fullWidth>\n                                    <Select\n                                        value={styleTypes[0]}\n                                        onChange={this.handleStyleTypeChange}\n                                        input={\n                                            <OutlinedInput\n                                                name=\"styleType\"\n                                                id=\"style-type\"\n                                            />\n                                        }\n                                    >\n                                    {styleTypes.map((styleType, index) => (\n                                        <MenuItem \n                                            value={styleType} \n                                            style={styleType} \n                                            key={index}\n                                        >\n                                            Font {index + 1}\n                                        </MenuItem>\n                                    ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        {/* /Row */}\n                        {/* Row */}\n                        <Grid container className={classes.Grid_control}>\n                            <Grid item xs={12} md={4}>\n                                <Typography\n                                    className={classes.label} \n                                    variant=\"body1\">Properties</Typography>\n                            </Grid>\n                            <Grid item xs={12} md={8} className={classes.Grid_controls}>\n                                <Radio\n                                    className={classes.control_dense}\n                                    checked={styles.textAlign === 'left'}\n                                    onChange={this.handleStylePropertyChange}\n                                    value=\"left\"\n                                    name=\"textAlign\"\n                                    icon={<FormatAlignLeftIcon />}\n                                    checkedIcon={<FormatAlignLeftIcon />}\n                                    color=\"primary\"\n                                    aria-label=\"Left\"\n                                />\n                                <Radio\n                                    className={classes.control_dense}\n                                    checked={styles.textAlign === 'center'}\n                                    onChange={this.handleStylePropertyChange}\n                                    value=\"center\"\n                                    name=\"textAlign\"\n                                    icon={<FormatAlignCenterIcon />}\n                                    checkedIcon={<FormatAlignCenterIcon />}\n                                    color=\"primary\"\n                                    aria-label=\"Center\"\n                                />\n                                <Radio\n                                    className={classes.control_dense}\n                                    checked={styles.textAlign === 'right'}\n                                    onChange={this.handleStylePropertyChange}\n                                    value=\"right\"\n                                    name=\"textAlign\"\n                                    icon={<FormatAlignRightIcon />}\n                                    checkedIcon={<FormatAlignRightIcon />}\n                                    color=\"primary\"\n                                    aria-label=\"Right\"\n                                />\n                                <Checkbox\n                                    className={classes.control_dense}\n                                    checked={styles.fontWeight === 'bold'}\n                                    onChange={this.handleStylePropertyChange}\n                                    name=\"fontWeight\"\n                                    value={styles.fontWeight !== 'bold' ? 'bold' : 'normal'}\n                                    icon={<FormatBoldIcon />}\n                                    checkedIcon={<FormatBoldIcon />}\n                                    color=\"primary\"\n                                    aria-label=\"Bold\"\n                                />\n                                <Checkbox\n                                    className={classes.control_dense}\n                                    checked={styles.textTransform === 'uppercase'}\n                                    onChange={this.handleStylePropertyChange}\n                                    name=\"textTransform\"\n                                    value={styles.textTransform !== 'uppercase' ? 'uppercase' : 'none'}\n                                    icon={<FormatSizeIcon />}\n                                    checkedIcon={<FormatSizeIcon />}\n                                    color=\"primary\"\n                                    aria-label=\"Uppercase\"\n                                />\n                                <Checkbox\n                                    className={classes.control_dense}\n                                    checked={styles.fontStyle === 'italic'}\n                                    onChange={this.handleStylePropertyChange}\n                                    name=\"fontStyle\"\n                                    value={styles.fontStyle !== 'italic' ? 'italic' : 'normal'}\n                                    icon={<FormatItalicIcon />}\n                                    checkedIcon={<FormatItalicIcon />}\n                                    color=\"primary\"\n                                    aria-label=\"Italic\"\n                                />\n                            </Grid>\n                        </Grid>\n                        {/* /Row */}\n                        {/* Row */}\n                        <Grid container className={classes.Grid_control}>\n                            <Grid item xs={12} md={4}>\n                                <Typography\n                                    className={classes.label} \n                                    variant=\"body1\">Font Color</Typography>\n                            </Grid>\n                            <Grid item xs={12} md={8} className={classes.Grid_controls}>\n                                <Radio\n                                    className={\n                                        classNames(\n                                            classes.Radio_color, \n                                            styles.color === '#000000' ? classes.Radio_color_checked : null\n                                        )\n                                    }\n                                    disableRipple\n                                    checked={styles.color === '#000000'}\n                                    onChange={this.handleStylePropertyChange}\n                                    value=\"#000000\"\n                                    name=\"color\"\n                                    icon={<LensIcon />}\n                                    checkedIcon={<LensIcon />}\n                                    style={{color: '#000000'}}\n                                    aria-label=\"Black\"\n                                />\n                                <Radio\n                                    className={\n                                        classNames(\n                                            classes.Radio_color, \n                                            styles.color === '#1A8D5F' ? classes.Radio_color_checked : null\n                                        )\n                                    }\n                                    disableRipple\n                                    checked={styles.color === '#1A8D5F'}\n                                    onChange={this.handleStylePropertyChange}\n                                    value=\"#1A8D5F\"\n                                    name=\"color\"\n                                    icon={<LensIcon />}\n                                    checkedIcon={<LensIcon />}\n                                    style={{color: '#1A8D5F'}}\n                                    aria-label=\"Green\"\n                                />\n                                <Radio\n                                    className={\n                                        classNames(\n                                            classes.Radio_color, \n                                            styles.color === '#D0021B' ? classes.Radio_color_checked : null\n                                        )\n                                    }\n                                    disableRipple\n                                    checked={styles.color === '#D0021B'}\n                                    onChange={this.handleStylePropertyChange}\n                                    value=\"#D0021B\"\n                                    name=\"color\"\n                                    icon={<LensIcon />}\n                                    checkedIcon={<LensIcon />}\n                                    style={{color: '#D0021B'}}\n                                    aria-label=\"Red\"\n                                />\n                                <Radio\n                                    className={\n                                        classNames(\n                                            classes.Radio_color, \n                                            styles.color === '#268EF9' ? classes.Radio_color_checked : null\n                                        )\n                                    }\n                                    disableRipple\n                                    checked={styles.color === '#268EF9'}\n                                    onChange={this.handleStylePropertyChange}\n                                    value=\"#268EF9\"\n                                    name=\"color\"\n                                    icon={<LensIcon />}\n                                    checkedIcon={<LensIcon />}\n                                    style={{color: '#268EF9'}}\n                                    aria-label=\"Blue\"\n                                />\n                                <Radio\n                                    className={\n                                        classNames(\n                                            classes.Radio_color, \n                                            styles.color === '#F1F1F1' ? classes.Radio_color_checked : null\n                                        )\n                                    }\n                                    disableRipple\n                                    checked={styles.color === '#F1F1F1'}\n                                    onChange={this.handleStylePropertyChange}\n                                    value=\"#F1F1F1\"\n                                    name=\"color\"\n                                    icon={<LensIcon />}\n                                    checkedIcon={<LensIcon />}\n                                    style={{color: '#F1F1F1'}}\n                                    aria-label=\"White\"\n                                />\n                                <Checkbox\n                                    className={\n                                        classNames(\n                                            classes.colorPickerCheckbox,\n                                            this.state.isColorPickerShow ? classes.colorPickerCheckbox_checked : null\n                                        )\n                                    }\n                                    disableRipple\n                                    checked={this.state.isColorPickerShow}\n                                    onChange={this.handlePropertyChange}\n                                    name=\"isColorPickerShow\"\n                                    icon={\n                                        <ExpandMoreIcon style={{\n                                            backgroundColor: styles.color,\n                                            color: '#fff'\n                                        }} />\n                                    }\n                                    checkedIcon={\n                                        <ExpandLessIcon style={{\n                                            backgroundColor: styles.color,\n                                            color: '#fff'\n                                        }} />\n                                    }\n                                    aria-label=\"Custom Color\"\n                                />\n                            </Grid>\n                            <Grid \n                                item xs={12}\n                                className={classes.colorPickerContainer}\n                                hidden={!this.state.isColorPickerShow}\n                            >\n                                <HuePicker\n                                    className={classes.HuePicker}\n                                    color={styles.color} \n                                    onChange={this.handleTextColorChange}\n                                />\n                            </Grid>\n                        </Grid>\n                        {/* /Row */}\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        {/* Row */}\n                        <Grid container className={classes.Grid_control}>\n                            <Grid item xs={12} md={4}>\n                                <Typography\n                                    className={classes.label} \n                                    variant=\"body1\">Outline</Typography>\n                            </Grid>\n                            <Grid item xs={3} md={2}>\n                                <Checkbox\n                                    disableRipple\n                                    className={\n                                        classNames(\n                                            classes.colorPickerCheckbox,\n                                            this.state.isTextStrokeColorPickerShow ? classes.colorPickerCheckbox_checked : null\n                                        )\n                                    }\n                                    checked={this.state.isTextStrokeColorPickerShow}\n                                    onChange={this.handlePropertyChange}\n                                    name=\"isTextStrokeColorPickerShow\"\n                                    icon={\n                                        <ExpandMoreIcon style={{\n                                            backgroundColor: styles.WebkitTextStrokeColor,\n                                            color: '#fff'\n                                        }} />\n                                    }\n                                    checkedIcon={\n                                        <ExpandLessIcon style={{\n                                            backgroundColor: styles.WebkitTextStrokeColor,\n                                            color: '#fff'\n                                        }} />\n                                    }\n                                    aria-label=\"Custom Color\"\n                                />\n                            </Grid>\n                            <Grid item xs={9} md={3}>\n                                <TextField\n                                    value={styles.WebkitTextStrokeWidth}\n                                    onChange={this.handleStylePropertyChange}\n                                    name=\"WebkitTextStrokeWidth\"\n                                    type=\"number\"\n                                    fullWidth\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}\n                                className={classes.colorPickerContainer}\n                                hidden={!this.state.isTextStrokeColorPickerShow}\n                            >\n                                <HuePicker\n                                    className={classes.HuePicker}\n                                    color={styles.WebkitTextStrokeColor} \n                                    onChange={this.handleTextStrokeColorChange}\n                                />\n                            </Grid>\n                        </Grid>\n                        {/* /Row */}\n                        {/* Row */}\n                        <Grid container className={classes.Grid_control}>\n                            <Grid item xs={12} md={4}>\n                                <Typography \n                                    className={classes.label}\n                                    variant=\"body1\">Shadow</Typography>\n                            </Grid>\n                            <Grid item xs={12} md={8}>\n                                <Checkbox\n                                    className={classes.control_dense}\n                                    disableRipple\n                                    checked={styles.textShadow !== 'none'}\n                                    onChange={this.handleStylePropertyChange}\n                                    name=\"textShadow\"\n                                    value={styles.textShadow !== 'none' ? 'none' : '0 0 12px rgba(0,0,0,.5)'}\n                                    color=\"primary\"\n                                    aria-label=\"Has Text Shadow?\"\n                                />\n                            </Grid>\n                        </Grid>\n                        {/* /Row */}\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    };\n}\n\nTextEditor.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TextEditor);","const styles = theme => ({\n    root: {\n        textAlign: 'center'\n    },\n    FormControlLabel: {\n        margin: 0,\n        '&[aria-selected=true] img': {\n            boxShadow: theme.states.selected.boxShadow\n        }\n    },\n    Radio: {\n        position: 'absolute',\n        opacity: 0\n    },\n    image: {\n        width: 100,\n        height: 100,\n        borderRadius: theme.shape.borderRadius\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './IconList.styles';\n// DEMO DATA\nimport DEMO_ICONS_DATA from '../../../assets/demo/data/icons.json';\n\nclass IconList extends React.Component {\n    state = {\n        selectedIcon: '',\n        icons: DEMO_ICONS_DATA || []\n    };\n\n    handleSelect = ({ target }) => {\n        const iconIndex = target.value;\n        const selectedIcon = this.state.icons[iconIndex];\n        this.setState({ selectedIcon: selectedIcon });\n    }\n\n    render() {\n        const { className, classes } = this.props;\n        const { selectedIcon, icons } = this.state;\n        \n        return (\n            <div className={classNames(className, classes.root)}>\n                <Grid container spacing={16}>\n\n                    {icons.map((icon, index) => (\n                        <Grid item xs={6} sm={3} md={2} key={index}>\n                            <FormControlLabel \n                                aria-selected={selectedIcon === icon}\n                                checked={selectedIcon === icon}\n                                className={classes.FormControlLabel}\n                                onChange={this.handleSelect}\n                                name=\"icon\"\n                                value={String(index)}\n                                control={\n                                    <Radio className={classes.Radio}/>\n                                }\n                                label={\n                                    <img \n                                        src={icon.url}\n                                        className={classes.image}\n                                        alt=\"\"\n                                    />\n                                }\n                            />\n                        </Grid>\n                    ))}\n\n                </Grid>\n            </div>\n        )\n    };\n}\n\nIconList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IconList);","const styles = theme => ({\n    root: {\n        maxWidth: 750,\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n    Typography_title: {\n        marginBottom: theme.spacing.unit * 3\n    },\n    canvasContainer: {\n        position: 'relative'\n    },\n    CircularProgress: {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        zIndex: -1\n    },\n    canvas: {\n        width: '100%',\n        marginBottom: theme.spacing.unit * 2.5,\n        opacity: 0,\n        transition: theme.transitions.create()\n    },\n    canvas_state_ready: {\n        opacity: 1\n    },\n    Toolbar: {\n        backgroundColor: theme.palette.grey[50],\n        borderStyle: 'solid',\n        borderWidth: 1,\n        borderColor: theme.palette.border.light,\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n    },\n    icon: {\n        marginRight: theme.spacing.unit\n    },\n    Button: {\n        backgroundColor: theme.palette.white,\n        whiteSpace: 'nowrap',\n        '&:not(:last-child)': {\n            marginRight: theme.spacing.unit,\n        }\n    },\n    IconButton_closeDialog: {\n        position: 'absolute',\n        right: theme.spacing.unit * 2,\n        top: theme.spacing.unit * 2,\n        color: theme.palette.error.main\n    },\n    Dialog: {\n        '&>div>div': {\n            margin: theme.spacing.unit * 2.5\n        }\n    },\n    DialogContent: {\n        padding: theme.spacing.unit * 2.5\n    },\n    Button_copyStyles: {\n        marginRight: 'auto'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport FormatShapesIcon from '@material-ui/icons/FormatShapes';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport TextEditor from './TextEditor';\nimport IconList from './IconList';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './MemeEditor.styles';\n\nconst TextDialog = ({ classes, open, onClose }) => (\n    <Dialog\n        open={open}\n        onClose={onClose}\n        className={classes.Dialog}\n        maxWidth=\"md\"\n        aria-labelledby=\"Edit Text\"\n        aria-describedby=\"Edit Text in Meme Editor\"\n    >\n        <DialogTitle>\n            <Typography component=\"div\" variant=\"h3\">Edit Text</Typography>\n            <IconButton \n                className={classes.IconButton_closeDialog}\n                onClick={onClose}\n            >\n                <ClearIcon />\n            </IconButton>\n        </DialogTitle>\n        <Divider />\n        <DialogContent className={classes.DialogContent}>\n            <TextEditor />\n        </DialogContent>\n        <Divider />\n        <DialogActions>\n            <Button \n                className={classes.Button_copyStyles}\n                onClick={onClose}\n                size=\"large\"\n                color=\"primary\"\n            >\n                Copy styles to all text boxes\n            </Button>\n            <Button \n                onClick={onClose} \n                variant=\"outlined\"\n                size=\"large\"\n            >\n                Reset\n            </Button>\n            <Button \n                onClick={onClose} \n                variant=\"contained\" \n                color=\"primary\"\n                size=\"large\"\n            >\n                Save\n            </Button>\n        </DialogActions>\n    </Dialog>\n);\n\nconst IconDialog = ({ classes, open, onClose }) => (\n    <Dialog\n        open={open}\n        onClose={onClose}\n        className={classes.Dialog}\n        maxWidth=\"md\"\n        aria-labelledby=\"Choose Icons\"\n        aria-describedby=\"Choose Icons in Meme Editor\"\n    >\n        <DialogTitle>\n            <Typography component=\"div\" variant=\"h3\">Choose Icons</Typography>\n            <IconButton \n                className={classes.IconButton_closeDialog}\n                onClick={onClose}\n            >\n                <ClearIcon />\n            </IconButton>\n        </DialogTitle>\n        <Divider />\n        <DialogContent className={classes.DialogContent}>\n            <IconList />\n        </DialogContent>\n        <Divider />\n        <DialogActions>\n            <Button \n                onClick={onClose} \n                variant=\"contained\" \n                color=\"primary\"\n            >\n                Add to Meme\n            </Button>\n        </DialogActions>\n    </Dialog>\n);\n\nclass MemeEditor extends React.Component {\n    imageWidth = window.outerWidth > this.imageWidth ? this.imageWidth : window.outerWidth;\n    imageHeight = (this.imageWidth * 0.76);\n\n    state = {\n        imageUrl: `https://picsum.photos/${this.imageWidth}/${this.imageHeight}/?random`,\n        imageWidth: this.imageWidth,\n        imageHeight: this.imageHeight,\n        isTextDialogOpen: false,\n        isIconDialogOpen: false\n    };\n\n    componentDidMount() {\n        const { refs, props, state } = this;\n        const canvas = refs.canvas;\n        const canvasContext = canvas.getContext('2d');\n        const image = new Image();\n        canvas.width = state.imageWidth;\n        canvas.height = state.imageHeight;\n        image.src = state.imageUrl;\n        image.onload = function() {\n            canvasContext.drawImage(image, 0, 0);\n            canvas.classList.add(props.classes.canvas_state_ready);\n        };\n    }\n\n    handleTextDialogToggle = () => {\n        this.setState({ isTextDialogOpen: !this.state.isTextDialogOpen });\n    };\n\n    handleIconDialogToggle = () => {\n        this.setState({ isIconDialogOpen: !this.state.isIconDialogOpen });\n    };\n\n    render() {\n        const { className, classes } = this.props;\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                <TextDialog\n                    open={this.state.isTextDialogOpen}\n                    onClose={this.handleTextDialogToggle}\n                    classes={classes}\n                />\n                <IconDialog\n                    open={this.state.isIconDialogOpen}\n                    onClose={this.handleIconDialogToggle}\n                    classes={classes}\n                />\n                <Typography \n                    className={classes.Typography_title} \n                    component=\"h2\"\n                    variant=\"h3\">Add Text or icons to \"XYZ\" memes</Typography>\n                <div className={classes.canvasContainer}>\n                    <CircularProgress className={classes.CircularProgress} />                \n                    <canvas\n                        className={classes.canvas} \n                        ref=\"canvas\"\n                    />\n                </div>\n                <Toolbar className={classes.Toolbar}>\n                    <Button \n                        className={classes.Button} \n                        variant=\"outlined\"\n                        onClick={this.handleTextDialogToggle}\n                    >\n                        <FormatShapesIcon className={classes.icon} />\n                        Add Text\n                    </Button>\n                    <Button \n                        className={classes.Button} \n                        variant=\"outlined\"\n                        onClick={this.handleIconDialogToggle}\n                    >\n                        <InsertEmoticonIcon className={classes.icon} />\n                        Add Icon\n                    </Button>\n                </Toolbar>\n            </div>\n        );\n    }\n}\n\nMemeEditor.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MemeEditor);","const styles = theme => ({\n    root: {\n    },\n    Grid_label: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    Typography_label: {\n        fontSize: 18,\n        marginBottom: theme.spacing.unit,\n        [theme.breakpoints.up('md')]: {\n            marginBottom: 0\n        }\n    },\n    Button_copy: {\n        backgroundColor: theme.palette.grey[100]\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './CopyField.styles';\n\nconst copyToClipboard = copyString => {\n    const element = document.createElement('textarea');\n    element.value = copyString;\n    document.body.appendChild(element);\n    element.select();\n    document.execCommand('copy');\n    document.body.removeChild(element);\n};\n\nclass CopyField extends React.Component {\n    state = {\n        isCopiedMessageShow: false\n    }\n\n    handleCopy = (copyString) => {\n        copyToClipboard(copyString);\n        this.setState({ isCopiedMessageShow: true });\n    }\n\n    handleCopiedMessageHide = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({ isCopiedMessageShow: false });\n    };\n\n    render() {\n        const { props, state } = this;\n        const { className, classes } = props;\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                <Grid container>\n                    <Grid item xs={12} md={3} className={classes.Grid_label}>\n                        <Typography className={classes.Typography_label}>{props.label || ''}</Typography>\n                    </Grid>\n                    <Grid item xs={12} md={9}>                    \n                        <TextField\n                            value={props.value || ''}\n                            className={classes.TextField}\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{\n                                readOnly: true,\n                                endAdornment: (\n                                    <Button \n                                        className={classes.Button_copy}\n                                        variant=\"outlined\" \n                                        size=\"large\"\n                                        onClick={() => this.handleCopy(props.value || '')}\n                                    >Copy</Button>\n                                )\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Snackbar\n                    open={state.isCopiedMessageShow}\n                    onClose={this.handleCopiedMessageHide}\n                    autoHideDuration={1200}\n                    message=\"Copied!\"\n                />\n            </div>\n        );\n    }\n}\n\nCopyField.propTypes = {\n    classes: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(CopyField);","const styles = theme => ({\n    root: {},\n    Typography_title: {\n        marginBottom: theme.spacing.unit * 3,\n    },\n    CopyField: {\n        marginBottom: theme.spacing.unit * 3,\n        '&:last-child': {\n            marginBottom: 0\n        }\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport CopyField from '../../common/CopyField/CopyField';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './EmbedList.styles';\n\nclass EmbedList extends React.Component {\n    state = {\n        imageUrl: this.props.url\n    }\n\n    render() {\n        const { state, props } = this;\n        const { className, classes } = props;\n        const embedList = [\n            { label: 'Direct Link', value: state.imageUrl },\n            { label: 'Image Link', value: state.imageUrl },\n            { label: 'HTML Image', value: `<img src=\"${state.imageUrl}\" alt=\"\">` },\n            { label: 'BBCode', value: `[img]${state.imageUrl}[/img]` },\n        ];\n        \n        return (\n            <section className={classNames(className, classes.root)}>\n                <Typography \n                    className={classes.Typography_title}\n                    component=\"h2\" \n                    variant=\"h3\"\n                >Image Links</Typography>\n    \n                {embedList.map((embed, index) => \n                    <CopyField \n                        className={classes.CopyField}\n                        label={embed.label} \n                        value={embed.value}\n                        key={index}\n                    />\n                )}\n            </section>\n        )\n    }\n}\n\nEmbedList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EmbedList);","const styles = theme => ({\n    root_grouped: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    root_rounded: {\n    },\n    IconButton_rounded: {\n        backgroundColor: theme.palette.grey[100],\n        marginRight: theme.spacing.unit,\n        '&:last-child': {\n            marginRight: 0\n        },\n        [theme.breakpoints.up('md')]: {\n            marginRight: theme.spacing.unit * 2.5\n        }\n    },\n    Button_large: {\n        flex: 1,\n        borderRadius: 0,\n        minHeight: 90,\n        [theme.breakpoints.down('sm')]: {\n            minWidth: 90,\n            minHeight: 60,\n            '&:first-child': {\n                borderTopLeftRadius: theme.shape.borderRadius\n            },\n            '&:nth-child(3)': {\n                borderTopRightRadius: theme.shape.borderRadius\n            },\n            '&:nth-child(4)': {\n                borderBottomLeftRadius: theme.shape.borderRadius\n            },\n            '&:last-child': {\n                borderBottomRightRadius: theme.shape.borderRadius\n            }\n        },\n        '&+[role=button]': {\n            [theme.breakpoints.up('sm')]: {\n                borderLeftWidth: 0\n            }\n        },\n        [theme.breakpoints.up('sm')]: {\n            '&:first-child': {\n                borderTopLeftRadius: theme.shape.borderRadius,\n                borderBottomLeftRadius: theme.shape.borderRadius\n            },\n            '&:last-child': {\n                borderTopRightRadius: theme.shape.borderRadius,\n                borderBottomRightRadius: theme.shape.borderRadius\n            }\n        },\n    },\n    buttonList: {\n        listStyle: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n    RedditShareButton,\n    FacebookShareButton,\n    TwitterShareButton,\n    GooglePlusShareButton,\n    PinterestShareButton,\n    EmailShareButton\n} from 'react-share';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport AppIcon from '../AppIcon/AppIcon';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ShareLink.styles';\n\nconst ShareLinkLarge = ({ className, classes, url }) => (\n    <div className={classNames(className, classes.root_grouped)}>\n        <Button\n            className={classes.Button_large}\n            component={RedditShareButton}\n            variant=\"outlined\" \n            size=\"large\"\n            url={url}>\n            <AppIcon icon=\"reddit\" size=\"large\" />\n        </Button>\n        <Button\n            className={classes.Button_large}\n            component={FacebookShareButton}  \n            variant=\"outlined\" \n            size=\"large\"\n            url={url}>\n            <AppIcon icon=\"facebook\" size=\"large\" />\n        </Button>\n        <Button\n            className={classes.Button_large}\n            component={TwitterShareButton}  \n            variant=\"outlined\" \n            size=\"large\"\n            url={url}>\n            <AppIcon icon=\"twitter\" size=\"large\" />\n        </Button>\n        <Button\n            className={classes.Button_large}\n            component={GooglePlusShareButton}  \n            variant=\"outlined\" \n            size=\"large\"\n            url={url}>\n            <AppIcon icon=\"google-plus\" size=\"large\" />\n        </Button>\n        <Button\n            className={classes.Button_large}\n            component={PinterestShareButton}  \n            variant=\"outlined\" \n            size=\"large\"\n            url={url}>\n            <AppIcon icon=\"pinterest\" size=\"large\" />\n        </Button>\n        <Button\n            className={classes.Button_large}\n            component={EmailShareButton}  \n            variant=\"outlined\" \n            size=\"large\"\n            url={url}>\n            <AppIcon icon=\"envelope\" size=\"large\" />\n        </Button>\n    </div>\n);\n\n\nconst ShareLinkSmall = ({ className, classes, url }) => (\n    <div className={classNames(className, classes.root_rounded)}>\n        <IconButton \n            className={classes.IconButton_rounded}\n            component={RedditShareButton} \n            url={url}>\n            <AppIcon icon=\"reddit\" />\n        </IconButton>\n        <IconButton \n            className={classes.IconButton_rounded}\n            component={FacebookShareButton} \n            url={url}>\n            <AppIcon icon=\"facebook\" />\n        </IconButton>\n        <IconButton \n            className={classes.IconButton_rounded}\n            component={TwitterShareButton} \n            url={url}>\n            <AppIcon icon=\"twitter\" />\n        </IconButton>\n        <IconButton \n            className={classes.IconButton_rounded}\n            component={GooglePlusShareButton} \n            url={url}>\n            <AppIcon icon=\"google-plus\" />\n        </IconButton>\n        <IconButton \n            className={classes.IconButton_rounded}\n            component={PinterestShareButton} \n            url={url}>\n            <AppIcon icon=\"pinterest\" />\n        </IconButton>\n        <IconButton \n            className={classes.IconButton_rounded}\n            component={EmailShareButton} \n            url={url}>\n            <AppIcon icon=\"envelope\" />\n        </IconButton>\n    </div>\n);\n\nclass ShareLink extends React.Component {\n    state = {}\n\n    render() {\n        const { props } = this;\n        \n        return (\n            <div>\n                {props.buttonsVariant === 'grouped' ? (\n                    <ShareLinkLarge {...props} />\n                ) : (\n                    <ShareLinkSmall {...props} />\n                )}\n            </div>\n        );\n    }\n}\n\nShareLink.propTypes = {\n    classes: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    buttonsVariant: PropTypes.oneOf(['rounded', 'grouped'])\n};\n\nexport default withStyles(styles)(ShareLink);","const styles = theme => ({\n    root: {},\n    Typography_title: {\n        marginBottom: theme.spacing.unit * 2.5\n    },\n    AppContainer_top: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    AppContainer: {\n        [theme.breakpoints.down('md')]: {\n            paddingLeft: 0,\n            paddingRight: 0\n        }\n    },\n    imageContainer: {\n        position: 'relative'\n    },\n    CircularProgress: {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        zIndex: -1\n    },\n    image: {\n        maxWidth: '100%',\n        opacity: 0,\n        transition: theme.transitions.create(),\n        [theme.breakpoints.down('md')]: {\n            maxHeight: 220\n        }\n    },\n    image_state_ready: {\n        opacity: 1\n    },\n    ShareOrDownload: {\n        marginBottom: theme.spacing.unit * 2.5\n    },\n    ShareOrDownload_title: {\n        marginBottom: theme.spacing.unit * 2.5\n    },\n    Button: {\n        '&+button': {\n            marginLeft: theme.spacing.unit * 2.5\n        },\n        minHeight: 55,\n        minWidth: 155,\n        [theme.breakpoints.up('md')]: {\n            minWidth: 200\n        }\n    },\n    actions: {\n        textAlign: 'right',\n        [theme.breakpoints.down('md')]: {\n            textAlign: 'center'\n        }\n    },\n    Divider: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer'\nimport EmbedList from '../EmbedList/EmbedList';\nimport ShareLink from '../../common/ShareLink/ShareLink';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ShareImage.styles';\n\nclass ShareImage extends React.Component {\n    state = {\n        imageUrl: 'https://picsum.photos/750/570/?random',\n        maxWidth: 750,\n        maxHeight: 570\n    };\n    \n    render() {\n        const { state, props } = this;\n        const { className, classes } = props;\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                <AppContainer maxWidth=\"md\" className={classNames(classes.AppContainer, classes.AppContainer_top)}>\n                    <Typography\n                        className={classes.Typography_title}\n                        component=\"h2\"\n                        variant=\"h3\">\"XYZ\" meme</Typography>\n                    <div className={classes.imageContainer}>\n                        <CircularProgress className={classes.CircularProgress} />                \n                        <img \n                            src={state.imageUrl} \n                            className={classes.image} \n                            width={state.maxWidth}\n                            height={state.maxHeight}\n                            onLoad={(event) => event.target.classList.add(classes.image_state_ready)}\n                            alt=\"\"\n                        />\n                    </div>\n                </AppContainer>\n                <AppContainer maxWidth=\"md\" className={classes.AppContainer}>\n                    <section className={classes.ShareOrDownload}>\n                        <Typography\n                            className={classes.ShareOrDownload_title}\n                            component=\"h2\"\n                            variant=\"h3\"\n                        >Share or Download</Typography>\n                        <ShareLink \n                            buttonsVariant=\"grouped\" \n                            url={state.imageUrl} \n                        />\n                    </section>\n                    <div className={classes.actions}>\n                        <Button \n                            className={classes.Button}\n                            target=\"_blank\"\n                            href={state.imageUrl}\n                            download={true}\n                            component=\"a\"\n                            size=\"large\" \n                            color=\"secondary\" \n                            variant=\"contained\">Download</Button>\n                        {props.onCreateNew ? (\n                        <Button \n                            className={classes.Button}\n                            onClick={props.onCreateNew}\n                            size=\"large\" \n                            color=\"primary\" \n                            variant=\"contained\">Create New</Button>\n                        ) : null}\n                    </div>\n                </AppContainer>\n                <Divider className={classes.Divider} />\n                <AppContainer maxWidth=\"md\" className={classes.AppContainer}>\n                    <EmbedList\n                        className={classes.EmbedList}\n                        url={state.imageUrl}\n                    />\n                </AppContainer>\n            </div>\n        );\n    }\n}\n\nShareImage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ShareImage);","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center',\n        marginBottom: theme.spacing.unit * 5\n    },\n    button: {\n        marginRight: theme.spacing.unit,\n    },\n    actionContainer: {\n        textAlign: 'right',\n        marginTop: theme.spacing.unit * 2.5\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport ImageManager from '../ImageManager/ImageManager';\nimport MemeEditor from '../MemeEditor/MemeEditor';\nimport ShareImage from '../../tools/ShareImage/ShareImage';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './MemeMaker.styles';\n\nconst MemeImageManager = ({ classes }) => (\n    <div>\n        <header className={classes.header}>\n            <Typography variant=\"h1\" gutterBottom>Meme Maker</Typography>\n            <Typography variant=\"body1\">Select or Upload Image below to make Meme</Typography>\n        </header>\n        <ImageManager\n            labels={{\n                chooseTab: 'Choose Meme',\n                uploadTab: 'Upload Image',\n                search: 'Search memes',\n                selectButton: 'Add Caption'\n            }}\n        />\n    </div>\n)\n\nclass MemeMaker extends React.Component {\n    state = {\n        imageUrl: 'https://picsum.photos/750/570/?',\n        activeStep: 0\n    };\n\n    scrollToTop() {\n        if (!document.body.scrollIntoView) return;\n        this.refs.root.scrollIntoView();\n    }\n\n    handleGoNext = () => {\n        const { activeStep } = this.state;\n        this.setState({ activeStep: activeStep + 1 });\n        this.scrollToTop();\n    };\n\n    handleGoBack = () => {\n        this.setState(state => ({ activeStep: state.activeStep - 1 }));\n        this.scrollToTop();\n    };\n\n    handleReset = () => {\n        this.setState({ activeStep: 0 });\n        this.scrollToTop();\n    };\n    \n    render() {\n        const { className, classes } = this.props;\n        const { activeStep, imageUrl } = this.state;\n        const steps = [\n            { \n                label: 'Select Image',\n                content: (\n                    <MemeImageManager \n                        className={classes.MemeImageManager}\n                        classes={classes} \n                    />\n                )\n            },\n            { \n                label: 'Make Meme',\n                content: (\n                    <MemeEditor \n                        className={classes.MemeEditor}\n                        imageUrl={imageUrl} \n                    />\n                )\n            },\n            { \n                label: 'Download or Share',\n                content: (\n                    <ShareImage \n                        className={classes.ShareImage}\n                        imageUrl={imageUrl} \n                        onCreateNew={this.handleReset} \n                    />\n                )\n            }\n        ];\n        const lastStep = (steps.length - 1);\n        const getStepContent = (index) => steps[index].content;\n\n        return (\n            <div className={classNames(className, classes.root)} ref=\"root\">\n                <div className={classes.content}>\n                    {getStepContent(activeStep)}\n                </div>\n                {activeStep < lastStep ? (\n                    <div className={classes.actionContainer}>\n                        {activeStep > 0 ? (\n                        <Button\n                            size=\"large\"\n                            hidden={activeStep === 0}\n                            onClick={this.handleGoBack}\n                            className={classes.button}\n                        >\n                            Back\n                        </Button>\n                        ) : null}\n                        <Button\n                            variant=\"contained\"\n                            color={activeStep === 1 ? 'secondary' : 'primary'}\n                            size=\"large\"\n                            disabled={activeStep === lastStep}\n                            onClick={this.handleGoNext}\n                            className={classes.button}\n                        >\n                            {(activeStep === 0) ? 'Make It' : null}\n                            {(activeStep === 1) ? 'Save and Download' : null}\n                        </Button>\n                    </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n\nMemeMaker.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MemeMaker);","const styles = theme => ({\n    root: {},\n    Grid_item: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 8,\n        }\n    },\n    Divider: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\nimport MemeMaker from '../../tools/MemeMaker/MemeMaker';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './MemeMakerPage.styles';\n\nconst MemeMakerPage = ({ className, classes }) => (\n    <div className={classNames(className, classes.root)}>\n        <AppContainer>\n            <MemeMaker />\n        </AppContainer>\n        <Divider className={classes.Divider} />\n        <AppContainer>\n            <Grid container spacing={40}>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>How does it work?</Typography>\n                    <Typography variant=\"body1\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. </Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>What does it do?</Typography>\n                    <Typography variant=\"body1\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. </Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Why should I use it?</Typography>\n                    <Typography variant=\"body1\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. </Typography>\n                </Grid>\n            </Grid>\n        </AppContainer>\n    </div>\n);\n \nMemeMakerPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MemeMakerPage);","const styles = theme => ({\n    root: {\n        textAlign: 'center'\n    },\n    AppContainer: {\n        paddingTop: 0\n    },\n    Typography_message: {\n        lineHeight: 1.5\n    },\n    progressContainer: {\n        marginBottom: theme.spacing.unit * 3\n    },\n    Icon: {\n        marginRight: theme.spacing.unit\n    },\n    ShareLink: {\n        marginTop: theme.spacing.unit * 4,\n        marginBottom: theme.spacing.unit * 4\n    },\n    Icon_check: {\n        fontSize: 80,\n        color: theme.palette.secondary[500]\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\nimport ShareLink from '../ShareLink/ShareLink';\nimport CopyField from '../CopyField/CopyField';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './Processing.styles';\n\nclass Processing extends React.Component {\n    state = {\n        isLoading: true\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({ isLoading: false })\n        }, 2000)\n    }\n\n    render() {\n        const { props, state } = this;\n        const { className, classes } = props;\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                <AppContainer className={classes.AppContainer}>\n                    <div className={classes.progressContainer}>\n                    {state.isLoading ? (\n                        <CircularProgress className={classes.CircularProgress} />\n                    ) : (\n                        <CheckCircleIcon fontSize=\"large\" className={classes.Icon_check} />\n                    )}\n                    </div>\n                    <Button \n                        className={classes.Button_download}\n                        variant=\"contained\" \n                        color=\"primary\"\n                        size=\"large\"\n                    >\n                        <SaveAltIcon className={classes.Icon} />\n                        Download PDF File\n                    </Button>\n                </AppContainer>\n                <Typography component=\"p\" variant=\"h1\" className={classes.Typography_message}>Has ImageResize helped you? You can help us too!</Typography>\n                <ShareLink \n                    className={classes.ShareLink}\n                    url=\"https://imageresize.org/\" \n                />\n                <CopyField \n                    label=\"Or link to us\" \n                    value={'<a href=\"https://imageresize.org/pdf-for-download.pdf\"></a>'} \n                />\n            </div>\n        );\n    }\n}\n\nProcessing.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Processing);","const styles = theme => ({\n    root: {\n    },\n    Snackbar: {\n        position: 'relative',\n        width: '100%',\n        marginBottom: theme.spacing.unit,\n        '&:last-child': {\n            marginBottom: 0\n        }\n    },\n    SnackbarContent: {\n        width: '100%',\n        maxWidth: '100%',\n    },\n    SnackbarContent_error: {\n        backgroundColor: theme.palette.error[50],\n        color: theme.palette.error.dark,\n    },\n    SnackbarContent_warning: {\n        backgroundColor: theme.palette.secondary[50],\n        color: theme.palette.secondary.dark,\n    },\n    SnackbarContent_info: {\n        backgroundColor: theme.palette.primary[50],\n        color: theme.palette.primary.dark,\n    },\n    messageContent: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    Icon: {\n        marginRight: theme.spacing.unit\n    },\n    IconButton_removeMessage: {\n        position: 'absolute',\n        right: theme.spacing.unit\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport IconButton from '@material-ui/core/IconButton'\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ClearIcon from '@material-ui/icons/Clear';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './MessageStack.styles';\n\nclass MessageStack extends React.Component {\n    state = {\n        messages: this.props.messages || []\n    };\n\n    handleRemoveMessage = (index) => {\n        let messages = this.state.messages;\n        messages.splice(index, 1);\n        this.setState({ messages });\n    }\n\n    render() {\n        const { props, state } = this;\n        const { className, classes } = props;\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                {state.messages.map((message, index) =>\n                <Snackbar\n                    className={classes.Snackbar}\n                    open={true}\n                    key={index}\n                >\n                    <SnackbarContent\n                        className={classNames(classes.SnackbarContent, \n                            (message.variant === 'error') ? classes.SnackbarContent_error :\n                            (message.variant === 'warning') ? classes.SnackbarContent_warning :\n                            classes.SnackbarContent_info\n                        )}\n                        message={\n                            <div className={classes.messageContent}>\n                                {message.variant === 'error' ? (\n                                    <ErrorIcon className={classes.Icon} />\n                                ) : (message.variant === 'warning') ? (\n                                    <WarningIcon className={classes.Icon} />\n                                ) : (\n                                    <InfoIcon className={classes.Icon} />\n                                )}\n                                <span>{message.text}</span>\n                                <IconButton \n                                    className={classes.IconButton_removeMessage}\n                                    onClick={() => this.handleRemoveMessage(index)}\n                                >\n                                    <ClearIcon fontSize=\"small\" />\n                                </IconButton>\n                            </div>\n                        }>\n                    </SnackbarContent>\n                </Snackbar>\n                )}\n            </div>\n        );\n    }\n}\n\nMessageStack.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MessageStack);","const styles = theme => ({\n    root: {},\n    MessageStack: {\n        marginBottom: theme.spacing.unit * 3\n    },\n    Tabs: {\n        marginBottom: -1,\n        '& [role=tablist]>span': {\n            display: 'none'\n        }\n    },\n    Tab: {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius,\n        border: '1px solid',\n        borderColor: theme.palette.border.light,\n        borderBottomWidth: 0,\n        backgroundColor: 'initial',\n        textTransform: 'initial',\n        fontWeight: 500,\n        fontSize: '1rem',\n        color: theme.palette.text.secondary,\n        transition: theme.transitions.create(),\n        '&:not([aria-selected=true]):hover': {\n            borderColor: theme.palette.border.dark,\n            color: theme.palette.text.primary\n        },\n        '&[aria-selected=true]': {\n            backgroundColor: theme.palette.grey[50],\n            borderColor: theme.palette.border.dark,\n            color: theme.palette.text.primary\n        },\n        '&+button': {\n            marginLeft: -1\n        }\n    },\n    SwipeableViews: {\n        borderRadius: theme.shape.borderRadius,\n        borderTopLeftRadius: 0,\n        backgroundColor: theme.palette.grey[50],\n        backgroundImage: theme.palette.border.dashedBorderImageDark,\n        marginBottom: theme.spacing.unit * 2.5\n    },\n    dropzone_isActive: {\n        backgroundColor: theme.palette.secondary[50],\n        backgroundImage: theme.palette.border.dashedBorderImageSecondary,\n    },\n    TextField: {\n        maxWidth: theme.breakpoints.values.sm,\n        margin: 'auto',\n        backgroundColor: theme.palette.common.white\n    },\n    Icon: {\n        marginRight: theme.spacing.unit\n    },\n    input_uploadFile: {\n        display: 'none',\n    },\n    tabContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        textAlign: 'center',\n        padding: theme.spacing.unit * 2.5,\n        minHeight: 200,\n        [theme.breakpoints.up('md')]: {\n            padding: theme.spacing.unit * 5,\n        }\n    },\n    Typography_uploadFile: {\n        paddingTop: theme.spacing.unit * 3\n    },\n    progressContainer: {\n        paddingTop: theme.spacing.unit * 3,\n        textAlign: 'center'\n    },\n    uploadingContainer: {\n        marginTop: theme.spacing.unit * 2,\n        display: 'flex',\n        alignItems: 'center'\n    },\n    List_file: {\n        padding: 0\n    },\n    ListItem_file: {\n        minHeight: theme.spacing.unit * 7,\n        backgroundColor: theme.palette.grey[50],\n        borderColor: theme.palette.border.dark,\n        borderRadius: theme.shape.borderRadius,\n        marginBottom: (theme.spacing.unit * 2) + (theme.spacing.unit / 2),\n        backgroundImage: theme.palette.border.dashedBorderImageDark,\n        transition: theme.transitions.create(),\n        transitionProperty: 'background-color',\n        '&:hover': {\n            backgroundColor: theme.palette.primary[50],\n            backgroundImage: theme.palette.border.dashedBorderImagePrimary\n        },\n        [theme.breakpoints.down('xs')]: {\n            paddingBottom: theme.spacing.unit * 5\n        }\n    },\n    ListItemText_file: {\n        '&>span': {\n            fontSize: theme.typography.fontSize\n        },\n        [theme.breakpoints.down('xs')]: {\n            whiteSpace: 'nowrap',\n            overflow: 'auto',\n            padding: 0\n        }\n    },\n    ListItemSecondaryAction_file: {\n        display: 'flex',\n        alignItems: 'center',\n        [theme.breakpoints.down('xs')]: {\n            left: theme.spacing.unit * 3,\n            bottom: 0,\n            top: 'initial',\n            transform: 'initial'\n        }\n    },\n    LinearProgress_file: {\n        minWidth: 100,\n        width: '100%'\n    },\n    tabsContainer: {\n        position: 'relative'\n    },\n    uploadInfo: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: `${theme.spacing.unit * 1.75}px ${theme.spacing.unit * 2.5}px`,\n        margin: 'auto',\n        maxWidth: '50%',\n        whiteSpace: 'normal',\n        textAlign: 'right',\n        [theme.breakpoints.down('sm')]: {\n            left: 0,\n            maxWidth: 'initial',\n            textAlign: 'center',\n            bottom: 0,\n            top: 'initial',\n            color: theme.palette.grey[800]\n        }\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableViews from 'react-swipeable-views';\nimport Typography from '@material-ui/core/Typography';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AppIcon from '../../common/AppIcon/AppIcon';\n\nimport MessageStack from '../../common/MessageStack/MessageStack';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './FileUploadManager.styles';\n\nconst getIconNameByFileType = (type) => {\n    return (type.indexOf('image') > -1) ? 'image' : (type.indexOf('pdf') > -1) ? 'pdf' : 'file';\n}\n\nconst TabContainer = ({ className, children }) => (\n    <Typography className={className || ''} component=\"div\">\n        {children}\n    </Typography>\n);\n  \nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass FileUploadManager extends React.Component {\n    state = {\n        maxFiles: this.props.maxFiles || 1,\n        maxFileSize: this.props.maxFileSize || 5120,\n        accept: this.props.accept || 'image/*',\n        files: this.props.files || [],\n\n        url: '',\n        isFileLoading: false,\n        activeTabIndex: 0,\n        errorMessages: []\n    };\n    \n    handleTabChange = (event, activeTabIndex) => {\n        this.setState({ activeTabIndex });\n    };\n\n    handleTabSwipe = activeTabIndex => {\n        this.setState({ activeTabIndex });\n    };\n\n    handleFileDownload = (event) => {\n        event.preventDefault();\n\n        // Fake File Loading\n        this.setState({ isFileLoading: true });\n        setTimeout(() => this.setState({ isFileLoading: false }), 2000);\n    }\n\n    handleUrlChange = (event) => {\n        this.setState({ url: event.target.value });\n    }\n    \n    handleUploadCancel = () => {}\n\n    handleDrop = (acceptedFiles, rejectedFiles) => {\n        const files = [...acceptedFiles, ...this.state.files];\n        this.setState({ files });\n\n        // Add Error Messages\n        if (rejectedFiles.length > 0) {\n            const errorMessages = this.state.errorMessages;\n            rejectedFiles.forEach((rejectedFile) => {\n                errorMessages.push({\n                    variant: 'error',\n                    text: rejectedFile.name + ' — This file is not allowed.'\n                });\n            });\n        }\n\n        this.props.onChange(files);\n    }\n\n    render() {\n        const { props, state } = this;\n        const { className, classes } = props;\n        const labels = props.labels || {};\n        const { activeTabIndex } = state;\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                <MessageStack\n                    className={classes.MessageStack} \n                    messages={state.errorMessages} \n                />\n\n                <div className={classes.tabsContainer}>\n                    <Typography component=\"div\" className={classes.uploadInfo}>\n                        {state.maxFiles > 1 ? 'Up to 20 files, ' : null} \n                        {`Max ${state.maxFileSize / 1024}MB`}\n                        {state.maxFiles > 1 ? ' each' : null}\n                    </Typography>\n                    <Tabs\n                        className={classes.Tabs}\n                        value={activeTabIndex}\n                        onChange={this.handleTabChange}\n                        indicatorColor=\"primary\">\n                        <Tab \n                            className={classes.Tab}\n                            label={labels.chooseTab || 'Computer'} />\n                        <Tab \n                            className={classes.Tab} \n                            label={labels.uploadTab || 'URL'} />\n                    </Tabs>\n                    <Dropzone \n                        accept={state.accept}\n                        onDrop={this.handleDrop}\n                    >\n                    {({getRootProps, getInputProps, isDragActive}) => \n                        <SwipeableViews\n                            animateHeight\n                            className={classNames(classes.SwipeableViews, isDragActive ? classes.dropzone_isActive : null)} \n                            index={activeTabIndex}\n                            onChangeIndex={this.handleTabSwipe}>\n                            <TabContainer className={classes.TabContainer}>\n                                <div className={classes.tabContent}>\n                                    <input\n                                        {...getInputProps()}\n                                        className={classes.input_uploadFile}\n                                    />\n                                    <label htmlFor=\"upload-file\">\n                                        <Button \n                                            {...getRootProps()}\n                                            variant=\"contained\"\n                                            size=\"large\" \n                                            color=\"secondary\" \n                                            component=\"span\" \n                                            className={classes.Button}\n                                        >\n                                            <AttachFileIcon className={classes.Icon} /> \n                                            {labels.selectFiles || 'Select Files'}\n                                        </Button>\n                                    </label>\n                                    <Typography \n                                        className={classes.Typography_uploadFile} \n                                        variant=\"body1\">\n                                    {labels.dropFiles || 'or, drop Files here'}\n                                    </Typography>\n                            </div> \n                            </TabContainer>\n                            <TabContainer className={classes.TabContainer}>\n                                <form \n                                    className={classes.tabContent} \n                                    onSubmit={this.handleFileDownload}>\n                                    <TextField\n                                        className={classes.TextField}\n                                        id=\"file-url\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        placeholder=\"http://\"\n                                        type=\"url\"\n                                        value={state.url}\n                                        onChange={this.handleUrlChange}\n                                        InputProps={{\n                                            endAdornment: (\n                                                <InputAdornment position=\"end\">\n                                                    <Button\n                                                        disabled={!state.url || state.isFileLoading}\n                                                        type=\"submit\"\n                                                        variant=\"contained\"\n                                                        size=\"large\"\n                                                        color=\"secondary\"\n                                                    >\n                                                        {state.isFileLoading ? (\n                                                            <CircularProgress size={24} />\n                                                        ) : 'Go'}\n                                                    </Button>\n                                                </InputAdornment>\n                                            )\n                                        }} \n                                    />\n                                </form>\n                            </TabContainer>\n                        </SwipeableViews>\n                    }\n                    </Dropzone>\n                </div>\n\n                <List className={classes.List_file}>\n                    {state.files.map((file, index) => \n                    <ListItem className={classes.ListItem_file} key={index}>\n                        <ListItemIcon>\n                            <AppIcon icon={getIconNameByFileType(file.type)} />\n                        </ListItemIcon>\n                        <ListItemText\n                            className={classes.ListItemText_file}\n                            primary={file.name}\n                        />\n                        <ListItemSecondaryAction className={classes.ListItemSecondaryAction_file}>\n                            {file.uploaded === true ? (\n                                <IconButton aria-label=\"Delete\">\n                                    <DeleteIcon />\n                                </IconButton>\n                            ) : (\n                                <React.Fragment>\n                                    <LinearProgress \n                                        className={classes.LinearProgress_file}\n                                        color=\"secondary\" \n                                        variant=\"determinate\" \n                                        value={0}\n                                    />\n                                    <IconButton\n                                        aria-label=\"Remove uploading\"\n                                        onClick={this.handleUploadCancel}>\n                                        <ClearIcon fontSize=\"small\" />\n                                    </IconButton>\n                                </React.Fragment>\n                            )}\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    )}\n                </List>\n            </div>\n        );\n    }\n}\n\nFileUploadManager.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(FileUploadManager);","const styles = theme => ({\n    root: {}\n});\n\nexport default styles;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport Processing from '../../common/Processing/Processing';\nimport FileUploadManager from '../FileUploadManager/FileUploadManager';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ImageResizeTool.styles';\n\nclass ImageResizeTool extends React.Component {\n    state = {\n        activeStep: 0,\n        files: []\n    };\n\n    handleFileSelect = (selectedFiles) => {\n        this.setState({ files: selectedFiles });\n        this.handleNext();\n    }\n\n    handleNext = () => { \n        this.setState({ activeStep: this.state.activeStep + 1 });\n    }\n\n    render() {\n        const { props, state } = this;\n        const { className, classes } = props;\n\n        if (state.activeStep > 0 && props.location.search !== '?edit') {\n            props.history.push({ search: '?edit' });\n        } else if (state.activeStep === 0 && props.location.search !== '') {\n            props.history.push({ search: '' });\n        }\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                {state.activeStep === 0 ? (\n                    <FileUploadManager\n                        files={state.files}\n                        accept=\"image/*\"\n                        maxFiles={1}\n                        labels={{\n                            selectFiles: 'Select Images',\n                            dropFiles: 'or, drop Images here'\n                        }}\n                        onChange={this.handleFileSelect}\n                    />\n                ) : state.activeStep === 1 ? (\n                    <Typography>Place for Image Resize Editor</Typography>\n                ) : state.activeStep === 2 ? (\n                    <Processing className={classes.Processing}  />\n                ) : null}\n            </div>\n        );\n    }\n}\n\nImageResizeTool.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles(styles)(ImageResizeTool));","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center',\n        marginBottom: theme.spacing.unit * 6,\n    },\n    Grid_item: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 8,\n        }\n    },\n    Divider: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\nimport ImageResizeTool from '../../tools/ImageResizeTool/ImageResizeTool';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ImageResizePage.styles';\n\nconst ImageResizePage = ({ className, classes }) => (\n    <div className={classNames(className, classes.root)}>\n        <AppContainer maxWidth=\"md\">\n            <header className={classes.header}>\n                <Typography variant=\"h1\" gutterBottom>Image Resize</Typography>\n                {window.location.search !== '?edit' ? (\n                <Typography variant=\"body1\">Crop, resize, flip, or rotate an image by uploading it below.</Typography>\n                ) : null}\n            </header>\n            <ImageResizeTool className={classes.ImageResizeTool} />\n        </AppContainer>\n        <Divider className={classes.Divider} />\n        <AppContainer>\n            <Grid className={classes.Grid_container} container spacing={40}>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>What is ImageResize.org?</Typography>\n                    <Typography variant=\"body1\">Imageresize.org is a simple online image resizer. This tool allows you to resize your photos to an exact dimension in pixels or as a percentage of your original photo. To start, simply upload an image using the upload box above. We currently support the following image editing functions: Image resize, crop, rotate, and flip.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Resize Image</Typography>\n                    <Typography variant=\"body1\">Simply upload an image to our image resizer and specify exact pixel dimensions you want to resize your image to. You can also resize images to a percentage of the original size. This resize tool is useful if you want to use your images in forums, blogs, social media or profile photos. You can resize images in following units pixels, inches, cm, or mm.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Crop Image</Typography>\n                    <Typography variant=\"body1\">ImageResize.org also allows you to crop images. When cropping a photo, you can choose to keep the original aspect ratio by locking aspect ratio. Alternatively, you can select different aspect ratios such as 1:1 or 16:9 for your crop. You can also flip images (horizontally or vertically) or rotate them.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Reduce Image Size</Typography>\n                    <Typography variant=\"body1\">Our image resizer allows you to limit image file size in Kb or Mb. Simply select “Custom File Size” option under “Optimize” settings. Then enter your target file size in Kilobytes or Megabytes. This feature is useful if you are emailing your photos or if you have some file size restrictions when uploading images (blogs, forums). While our image resizer allows basic optimizations, you may want to use our advanced image compressor for png and jpg compressions.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Change Aspect Ratio</Typography>\n                    <Typography variant=\"body1\">When resizing images, you can choose to keep original aspect ratio or change it as you wish. Note: changing an image’s aspect ratio may distort (stretch) the image. If you wish to change the aspect ratio without stretching the image, you may wish to use our “background color fill” option. If this option is selected, we will resize your image and fill it with your choice of background color to avoid stretching.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Simple and Fast</Typography>\n                    <Typography variant=\"body1\">ImageResize.org is hosted in a scalable cloud computing environment. As a result, we can quickly resize images regardless of server load. This means you do not have to wait for a queue. This image resizer is simple and intuitive to use with live resize calculations for your final image size.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Free & Secure</Typography>\n                    <Typography variant=\"body1\">ImageResize.org also allows you to crop images. When cropping a photo, you can choose to keep the original aspect ratio by locking aspect ratio. Alternatively, you can select different aspect ratios such as 1:1 or 16:9 for your crop. You can also flip images (horizontally or vertically) or rotate them.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>FAQ:</Typography>\n                    <section>\n                        <Typography variant=\"h3\" gutterBottom>Question: How to resize an image in pixels?</Typography>\n                        <Stepper activeStep={-1} orientation=\"vertical\">\n                            <Step><StepLabel><Typography variant=\"body1\">Upload your image</Typography></StepLabel></Step>\n                            <Step><StepLabel><Typography variant=\"body1\">Select \"Custom Size\" from the drop-down box in \"Resize your Image\" section</Typography></StepLabel></Step>\n                            <Step><StepLabel><Typography variant=\"body1\">Enter a new custom size for the image in pixels</Typography></StepLabel></Step>\n                        </Stepper>\n                    </section>\n                    <section>\n                        <Typography variant=\"h3\" gutterBottom>Question: How to reduce image size in kb?</Typography>\n                        <Stepper activeStep={-1} orientation=\"vertical\">\n                            <Step><StepLabel><Typography variant=\"body1\">Upload your image</Typography></StepLabel></Step>\n                            <Step><StepLabel><Typography variant=\"body1\">Select \"Custom File Size\" from the \"Quality and Format\" section Enter a new target file size for your images in Kb or Mb</Typography></StepLabel></Step>\n                        </Stepper>\n                    </section>\n                    <section>\n                        <Typography variant=\"h3\" gutterBottom>Question: How to crop a photo?</Typography>\n                        <Stepper activeStep={-1} orientation=\"vertical\">\n                            <Step><StepLabel><Typography variant=\"body1\">Upload your photo</Typography></StepLabel></Step>\n                            <Step><StepLabel><Typography variant=\"body1\">Click on the \"Crop\" icon under \"Adjust Image\" section</Typography></StepLabel></Step>\n                            <Step><StepLabel><Typography variant=\"body1\">Optionally, select an aspect ratio or lock the original aspect ratio from the crop tool panel</Typography></StepLabel></Step>\n                            <Step><StepLabel><Typography variant=\"body1\">Draw your crop rectangle on top of the image using your mouse</Typography></StepLabel></Step>\n                            <Step><StepLabel><Typography variant=\"body1\">Click \"Apply\" to crop photo</Typography></StepLabel></Step>\n                        </Stepper>\n                    </section>\n                </Grid>\n            </Grid>\n        </AppContainer>\n    </div>\n);\n \nImageResizePage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ImageResizePage);","const styles = theme => ({\n    root: {\n\n    },\n    actionsContainer: {\n        textAlign: 'center'\n    },\n    Button_action: {\n        '&+button': {\n            marginLeft: theme.spacing.unit\n        }\n    },\n    SplitManager: {\n        marginBottom: theme.spacing.unit * 3\n    }\n});\n\nexport default styles;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport Processing from '../../common/Processing/Processing';\nimport FileUploadManager from '../FileUploadManager/FileUploadManager';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ImageBulkResizeTool.styles';\n\nclass ImageBulkResizeTool extends React.Component {\n    state = {\n        activeStep: 0,\n        files: []\n    };\n\n    handleFileSelect = (selectedFiles) => {\n        this.setState({ files: selectedFiles });\n    }\n\n    handleNext = () => { \n        this.setState({ activeStep: this.state.activeStep + 1 });\n    }\n\n    handleBack = () => { \n        this.setState({ activeStep: this.state.activeStep - 1 });\n    }\n\n    render() {\n        const { props, state } = this;\n        const { className, classes } = props;\n\n        if (state.activeStep > 0 && props.location.search !== '?edit') {\n            props.history.push({ search: '?edit' });\n        } else if (state.activeStep === 0 && props.location.search !== '') {\n            props.history.push({ search: '' });\n        }\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                {state.activeStep === 0 ? (\n                    <FileUploadManager\n                        files={state.files}\n                        accept=\"image/*\"\n                        maxFiles={20}\n                        labels={{\n                            selectFiles: 'Select Images',\n                            dropFiles: 'or, drop Images here'\n                        }}\n                        onChange={this.handleFileSelect}\n                    />\n                ) : state.activeStep === 1 ? (\n                    <Typography>Place for Image Bulk Resize</Typography>\n                ) : state.activeStep === 2 ? (\n                    <Processing className={classes.Processing}  />\n                ) : null}\n\n                {state.activeStep < 2 ? (\n                <div className={classes.actionsContainer}>\n                    {state.activeStep > 0 ? (\n                    <Button\n                        className={classes.Button_action}\n                        variant=\"contained\" \n                        size=\"large\"\n                        onClick={this.handleBack}>Back</Button>\n                    ) : null}\n                    <Button \n                        className={classes.Button_action}\n                        disabled={state.files.length < 1}\n                        variant=\"contained\" \n                        color=\"primary\" \n                        size=\"large\"\n                        onClick={this.handleNext}>\n                        Proceed to Bulk Resize   \n                    </Button>\n                </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n\nImageBulkResizeTool.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles(styles)(ImageBulkResizeTool));","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center',\n        marginBottom: theme.spacing.unit * 6\n    },\n    Grid_item: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 8,\n        }\n    },\n    Divider: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\nimport ImageBulkResizeTool from '../../tools/ImageBulkResizeTool/ImageBulkResizeTool';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ImageBulkResizePage.styles';\n\nconst ImageBulkResizePage = ({ className, classes }) => (\n    <div className={classNames(className, classes.root)}>\n        <AppContainer maxWidth=\"md\">\n            <header className={classes.header}>\n                <Typography variant=\"h1\" gutterBottom>Bulk Resize</Typography>\n                {window.location.search !== '?edit' ? (\n                <Typography variant=\"body1\">Resize, compress, or convert multiple images at once</Typography>\n                ) : null }\n            </header>\n            <ImageBulkResizeTool />\n        </AppContainer>\n        <Divider className={classes.Divider} />\n        <AppContainer>\n            <Grid container spacing={40}>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>What is Batch Image Resize Tool?</Typography>\n                    <Typography variant=\"body1\">Imageresize.org provides a bulk/batch resizing tool to easily Resize, compress, or convert multiple images at once. It is an online tool, so there is no software to download or install. You can upload up to 20 images at once using the upload box above.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Batch image resize</Typography>\n                    <Typography variant=\"body1\">Upload multiple photos from the upload box above to start resizing them. You can resize all your photos as a percentage of the original size or specify exact width and height.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Bulk image compressor</Typography>\n                    <Typography variant=\"body1\">Upload multiple images and compress them all at once using our image editor. You can choose a compression level or simply specify the maximum file size you want.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>What is different in Bulk Tool?</Typography>\n                    <Typography variant=\"body1\">Batch resize tool is designed to process multiple images at once. At this time, the bulk tool does not allow single image editing (crop, flip, rotate, and image filters).</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Bulk image converter</Typography>\n                    <Typography variant=\"body1\">Need to convert multiple images? Our image editor allows you to convert your images to any of the following file types; jpg, png, gif, and bmp.</Typography>\n                </Grid>\n            </Grid>\n        </AppContainer>\n    </div>\n);\n \nImageBulkResizePage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ImageBulkResizePage);","const styles = theme => ({\n    root: {\n\n    },\n    actionsContainer: {\n        textAlign: 'center'\n    },\n    Button_action: {\n        '&+button': {\n            marginLeft: theme.spacing.unit\n        }\n    },\n    SplitManager: {\n        marginBottom: theme.spacing.unit * 3\n    }\n});\n\nexport default styles;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nimport Processing from '../../common/Processing/Processing';\nimport FileUploadManager from '../FileUploadManager/FileUploadManager';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ImageCompressTool.styles';\n\nclass ImageCompressTool extends React.Component {\n    state = {\n        activeStep: 0,\n        files: []\n    };\n\n    handleFileSelect = (selectedFiles) => {\n        this.setState({ files: selectedFiles });\n    }\n\n    handleNext = () => { \n        this.setState({ activeStep: this.state.activeStep + 1 });\n    }\n\n    handleBack = () => { \n        this.setState({ activeStep: this.state.activeStep - 1 });\n    }\n\n    render() {\n        const { props, state } = this;\n        const { className, classes } = props;\n\n        if (state.activeStep > 0 && props.location.search !== '?edit') {\n            props.history.push({ search: '?edit' });\n        } else if (state.activeStep === 0 && props.location.search !== '') {\n            props.history.push({ search: '' });\n        }\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                {state.activeStep === 0 ? (\n                    <FileUploadManager\n                        files={state.files}\n                        accept=\"image/*\"\n                        maxFiles={20}\n                        labels={{\n                            selectFiles: 'Select Images',\n                            dropFiles: 'or, drop Images here'\n                        }}\n                        onChange={this.handleFileSelect}\n                    />\n                ) : state.activeStep === 1 ? (\n                    <Processing className={classes.Processing}  />\n                ) : null}\n\n                {state.activeStep < 1 ? (\n                <div className={classes.actionsContainer}>\n                    <Button \n                        className={classes.Button_action}\n                        disabled={state.files.length < 1}\n                        variant=\"contained\" \n                        color=\"primary\" \n                        size=\"large\"\n                        onClick={this.handleNext}>\n                        Compress Images\n                    </Button>\n                </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n\nImageCompressTool.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles(styles)(ImageCompressTool));","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center',\n        marginBottom: theme.spacing.unit * 6\n    },\n    Grid_item: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 8,\n        }\n    },\n    Divider: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\nimport ImageCompressTool from '../../tools/ImageCompressTool/ImageCompressTool';\n// Styles\nimport styles from './ImageCompressPage.styles';\n\nconst ImageCompressPage = ({ className, classes }) => (\n    <div className={classNames(className, classes.root)}>\n        <AppContainer maxWidth=\"md\">\n            <header className={classes.header}>\n                <Typography variant=\"h1\" gutterBottom>Compress Images</Typography>\n                {window.location.search !== '?edit' ? (\n                <Typography variant=\"body1\">Advanced PNG and JPEG compressor for reducing file size without quality loss</Typography>\n                ) : null}       \n            </header>\n            <ImageCompressTool />\n        </AppContainer>\n        <Divider className={classes.Divider} />\n        <AppContainer>\n            <Grid container spacing={40}>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>What is an Image Compressor?</Typography>\n                    <Typography variant=\"body1\">It is a free online tool provided by ImageResize.org for compressing images without losing image quality. We use the latest image compression methods and intelligent algorithms to lower your image file size. This image compressor can compress JPG and PNG images. If you have a GIF file to optimize, we recommend GIF Compressor by GIFmaker.net</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>JPEG compressor</Typography>\n                    <Typography variant=\"body1\">JPEG is a popular file/compression format used for storing digital images. Most JPEG files can be optimized further without losing any visual image quality. Upload and compress JPEG files above to improve page load times and save your bandwidth costs.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>PNG compressor</Typography>\n                    <Typography variant=\"body1\">PNG compresses images while keeping original data (lossless). As a result, file size can be bigger. Our compressor applies lossy algorithms, strip unwanted data, converts 24-bit color index to 8-bit. The Result is a drastically lower PNG image size with the same image quality.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Image optimization for webmasters</Typography>\n                    <Typography variant=\"body1\">If you are a webmaster, you want your pages to load faster to provide the best user experience. Optimizing your images will lead to faster page loading, save bandwidth, and help your website rank higher in search results.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Images optimization for consumers</Typography>\n                    <Typography variant=\"body1\">If you are a consumer or a photographer, you may want to compress your images to upload them faster. Optimized images also help to stay within file size restrictions on many consumer websites.</Typography>\n                </Grid>\n            </Grid>\n        </AppContainer>\n    </div>\n);\n \nImageCompressPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ImageCompressPage);","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center'\n    },\n    Grid_item: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 8,\n        }\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ImageFeaturesPage.styles';\n\nconst ImageFeaturesPage = ({ className, classes }) => (\n    <article className={classNames(className, classes.root)}>\n        <AppContainer>\n            <header className={classes.header}>\n                <Typography variant=\"h1\" gutterBottom>Features</Typography>\n            </header>\n            <Grid className={classes.Grid_container} container spacing={40}>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>What is ImageResize.org?</Typography>\n                    <Typography variant=\"body1\">Imageresize.org is a simple online image resizer. This tool allows you to resize your photos to an exact dimension in pixels or as a percentage of your original photo. To start, simply upload an image using the upload box above. We currently support the following image editing functions: Image resize, crop, rotate, and flip.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Resize Image</Typography>\n                    <Typography variant=\"body1\">Simply upload an image to our image resizer and specify exact pixel dimensions you want to resize your image to. You can also resize images to a percentage of the original size. This resize tool is useful if you want to use your images in forums, blogs, social media or profile photos. You can resize images in following units pixels, inches, cm, or mm.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Crop Image</Typography>\n                    <Typography variant=\"body1\">ImageResize.org also allows you to crop images. When cropping a photo, you can choose to keep the original aspect ratio by locking aspect ratio. Alternatively, you can select different aspect ratios such as 1:1 or 16:9 for your crop. You can also flip images (horizontally or vertically) or rotate them.</Typography>\n                </Grid>\n            </Grid>\n        </AppContainer>\n    </article>\n);\n \nImageFeaturesPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ImageFeaturesPage);","const styles = theme => ({\n    root: {\n\n    },\n    actionsContainer: {\n        textAlign: 'center'\n    },\n    Button_action: {\n        '&+button': {\n            marginLeft: theme.spacing.unit\n        }\n    },\n    SplitManager: {\n        marginBottom: theme.spacing.unit * 3\n    }\n});\n\nexport default styles;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nimport Processing from '../../common/Processing/Processing';\nimport FileUploadManager from '../FileUploadManager/FileUploadManager';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './PdfResizeTool.styles';\n\nclass PdfResizeTool extends React.Component {\n    state = {\n        activeStep: 0,\n        files: []\n    };\n\n    handleFileUpload = (selectedFiles) => {\n        this.setState({ files: selectedFiles });\n    }\n    \n    handleNext = () => { \n        this.setState({ activeStep: this.state.activeStep + 1 });\n    }\n\n    render() {\n        const { props, state } = this;\n        const { className, classes } = props;\n\n        if (state.activeStep > 0 && props.location.search !== '?edit') {\n            props.history.push({ search: '?edit' });\n        } else if (state.activeStep === 0 && props.location.search !== '') {\n            props.history.push({ search: '' });\n        }\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                {state.activeStep === 0 ? (\n                    <FileUploadManager\n                        files={state.files}\n                        accept=\"application/pdf\"\n                        maxFiles={20}\n                        labels={{\n                            selectFiles: 'Select PDF files',\n                            dropFiles: 'or, drop PDF files here'\n                        }}\n                        onChange={this.handleFileUpload}\n                    />\n                ) : state.activeStep === 1 ? (\n                    <Processing className={classes.Processing}  />\n                ) : null}\n\n                {state.activeStep < 1 ? (\n                <div className={classes.actionsContainer}>\n                    <Button \n                        className={classes.Button_action}\n                        disabled={state.files.length < 1}\n                        variant=\"contained\" \n                        color=\"primary\" \n                        size=\"large\"\n                        onClick={this.handleNext}>\n                        Proceed to PDF Resize \n                    </Button>\n                </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n\nPdfResizeTool.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles(styles)(PdfResizeTool));","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center',\n        marginBottom: theme.spacing.unit * 6\n    },\n    Grid_item: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 8,\n        }\n    },\n    Divider: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\nimport PdfResizeTool from '../../tools/PdfResizeTool/PdfResizeTool';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './PdfResizePage.styles';\n\nconst PdfResizePage = ({ className, classes }) => (\n    <div className={classNames(className, classes.root)}>\n        <AppContainer maxWidth=\"md\">\n            <header className={classes.header}>\n                <Typography variant=\"h1\" gutterBottom>PDF Resize</Typography>\n                {window.location.search !== '?edit' ? (\n                <Typography variant=\"body1\">Resize your PDF files to a new paper size by uploading them below.</Typography>\n                ) : null} \n            </header>\n            <PdfResizeTool />\n        </AppContainer>\n        <Divider className={classes.Divider} />\n        <AppContainer>\n            <Grid container>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>How to Resize PDF?</Typography>\n                    <Stepper activeStep={-1} orientation=\"vertical\">\n                        <Step><StepLabel><Typography variant=\"body1\">Click the \"Choose PDF\" button in the upload box (you can also drag and drop multiple PDF files for batch resizing).</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Click on the \"Proceed to PDF Resize\" button.</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">In \"Select Paper Size\" section, select a paper size or enter custom width and height.(you can enter a custom size in millimeters, points, inches, or pixels)</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Choose \"Scale to fit\"if you want to scale PDF content to fit the new paper size</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Choose \"Keep aspect ratio\" if you want to keep the aspect ratio of the original PDF while scaling.</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Click the \"Resize PDF\" button</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Click \"Download All\" button to download the resized PDF(s)</Typography></StepLabel></Step>\n                    </Stepper>\n                </Grid>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>Resize PDF Online</Typography>\n                    <Typography variant=\"body1\">This PDF resizer is an online tool. That means no software to install. It will work on your windows, mac, or mobile devices. This tool is 100% free, has no file limits, and does not require registration.</Typography>\n                </Grid>\n            </Grid>\n        </AppContainer>\n    </div>\n);\n \nPdfResizePage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PdfResizePage);","const styles = theme => ({\n    root: {\n\n    },\n    actionsContainer: {\n        textAlign: 'center'\n    },\n    Button_action: {\n        '&+button': {\n            marginLeft: theme.spacing.unit\n        }\n    },\n    SplitManager: {\n        marginBottom: theme.spacing.unit * 3\n    }\n});\n\nexport default styles;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nimport Processing from '../../common/Processing/Processing';\nimport FileUploadManager from '../FileUploadManager/FileUploadManager';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './PdfCompressTool.styles';\n\nclass PdfCompressTool extends React.Component {\n    state = {\n        activeStep: 0,\n        files: []\n    };\n\n    handleFileUpload = (selectedFiles) => {\n        this.setState({ files: selectedFiles });\n    }\n    \n    handleNext = () => { \n        this.setState({ activeStep: this.state.activeStep + 1 });\n    }\n\n    render() {\n        const { props, state } = this;\n        const { className, classes } = props;\n\n        if (state.activeStep > 0 && props.location.search !== '?edit') {\n            props.history.push({ search: '?edit' });\n        } else if (state.activeStep === 0 && props.location.search !== '') {\n            props.history.push({ search: '' });\n        }\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                {state.activeStep === 0 ? (\n                    <FileUploadManager\n                        files={state.files}\n                        accept=\"application/pdf\"\n                        maxFiles={20}\n                        labels={{\n                            selectFiles: 'Select PDF files',\n                            dropFiles: 'or, drop PDF files here'\n                        }}\n                        onChange={this.handleFileUpload}\n                    />\n                ) : state.activeStep === 1 ? (\n                    <Processing className={classes.Processing}  />\n                ) : null}\n\n                {state.activeStep < 1 ? (\n                <div className={classes.actionsContainer}>\n                    <Button \n                        className={classes.Button_action}\n                        disabled={state.files.length < 1}\n                        variant=\"contained\" \n                        color=\"primary\" \n                        size=\"large\"\n                        onClick={this.handleNext}>\n                        Compress PDF  \n                    </Button>\n                </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n\nPdfCompressTool.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles(styles)(PdfCompressTool));","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center',\n        marginBottom: theme.spacing.unit * 6\n    },\n    Grid_item: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 8,\n        }\n    },\n    Divider: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\nimport PdfCompressTool from '../../tools/PdfCompressTool/PdfCompressTool';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './PdfCompressPage.styles';\n\nconst PdfCompressPage = ({ className, classes }) => (\n    <div className={classNames(className, classes.root)}>\n        <AppContainer maxWidth=\"md\">\n            <header className={classes.header}>\n                <Typography variant=\"h1\" gutterBottom>PDF Compress</Typography>\n                {window.location.search !== '?edit' ? (\n                <Typography variant=\"body1\">Advanced PDF compressor for reducing file size without quality loss</Typography>\n                ) : null}\n            </header>\n            <PdfCompressTool />\n        </AppContainer>\n        <Divider className={classes.Divider} />\n        <AppContainer>\n            <Grid container spacing={40}>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>How to Reduce PDF File Size?</Typography>\n                    <Typography component=\"div\" variant=\"body1\">In this section, we will explain all the steps that are required to compress a PDF file without losing quality:</Typography>\n                    <Stepper activeStep={-1} orientation=\"vertical\">\n                        <Step><StepLabel><Typography variant=\"body1\">Click the \"Choose PDF\"button in the upload box (you can also drag and drop multiple PDF files for batch compressing).</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Click on the blue \"Compress PDF\"button once you have selected all the PDFs you want to compress.</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Observe the status of each PDF file as it changes from Uploading > Compressing > Done. The results table will list the PDF file size reduction and percentage size saved next to each PDF file.</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Download compressed PDF files individually by clicking on the blue download arrow next to each file.</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">To download all files in ZIP format, click the \"Download All\"blue button (below the file table)</Typography></StepLabel></Step>\n                    </Stepper>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Compress PDF Without Losing Quality</Typography>\n                    <Typography variant=\"body1\">We understand that quality matters when dealing with PDF files because PDFs are often zoomed, printed, and contain graphs and figures. When compressing your PDF files we pay attention to quality and do our best to reduce file size without losing quality. Our advanced algorithm can determine the components of your PDFs such as objects, images, and their current compression levels and resolution. We then apply our compression algorithm only if we believe that doing so will not degrade the quality of these components.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Compress PDF Online</Typography>\n                    <Typography variant=\"body1\">Our PDF compressor is 100% free and it operates entirely on the cloud. This means you do not need to install any software to compress your PDF files. Whether you are looking for a PDF compressor for mac, windows, or mobile devices, this tool can make your pdf smaller. We also remove all PDF files from our servers after 12 hours for security and privacy.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>Advanced PDF Compressor</Typography>\n                    <Typography variant=\"body1\">We reduce PDF size by performing several optimization techniques. For example, if your PDF file is image heavy, this compressor will determine the current resolution of those images and compress them even further using the JPEG or JBIG2 lossless compression method while preserving quality. We also discard alternate and duplicate images along with page thumbnails to reduce PDF size further. Other optimizations may include: removing embedded fonts from PDF file (only when PDF contain common fonts), optimizing content streams (we use Flate compression method), and removing duplicate fonts and color profiles.</Typography>\n                </Grid>\n            </Grid>\n        </AppContainer>\n    </div>\n);\n \nPdfCompressPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PdfCompressPage);","const styles = theme => ({\n    root: {\n\n    },\n    documentsContainer: {\n        maxHeight: 572,\n        backgroundColor: theme.palette.grey[100],\n        marginBottom: theme.spacing.unit * 3,\n        paddingBottom: theme.spacing.unit * 7.5,\n        overflow: 'auto'\n    },\n    Grid_item: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    Card: {\n        position: 'relative',\n        width: '90%',\n        maxWidth: 300,\n        boxShadow: '#CFDDE6 0 4px 20px',\n        marginTop: theme.spacing.unit * 7.5,\n    },\n    coverContainer: {\n        padding: theme.spacing.unit * 2.5,\n        paddingBottom: 0\n    },\n    coverWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: 370,\n        width: '100%',\n        border: theme.palette.grey[200] + ' 1px solid',\n        backgroundColor: theme.palette.grey[50],\n        backgroundSize: '80% auto',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n    },\n    cover: {\n        maxWidth: '100%',\n        maxHeight: '100%'\n    },\n    CardContent: {\n        textAlign: 'center'\n    },\n    CardActions: {\n        flexDirection: 'column',\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit / 2}px`,\n    },\n    actionsContainer: {\n        textAlign: 'center'\n    },\n    IconButton: {\n        margin: theme.spacing.unit / 2,\n        backgroundColor: theme.palette.grey[50],\n        boxShadow: 'rgba(0,0,0,.16) 0 2px 4px',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[100]\n        }\n    },\n    IconButton_remove: {\n        color: theme.palette.error.main\n    },\n    Typography_documentName: {\n        color: theme.palette.grey[700],\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden'\n    },\n    Button_action: {\n        '&+button': {\n            marginLeft: theme.spacing.unit\n        }\n    },\n    isSticky: {\n        position: 'sticky',\n        bottom: 0,\n        padding: theme.spacing.unit,\n        marginTop: -theme.spacing.unit,\n        backgroundColor: theme.palette.white\n    }\n});\n\nexport default styles;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport RotateRightIcon from '@material-ui/icons/RotateRight';\n\nimport Processing from '../../common/Processing/Processing';\nimport MessageStack from '../../common/MessageStack/MessageStack';\nimport FileUploadManager from '../FileUploadManager/FileUploadManager';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './PdfMergeTool.styles';\n\nclass PdfMergeTool extends React.Component {\n    state = {\n        activeStep: 0,\n        files: []\n    };\n\n    handleFileSelect = (selectedFiles) => {\n        this.setState({ files: selectedFiles });\n    }\n\n    handleFileRemove = (fileIndex) => {\n        const files = this.state.files;\n        files.splice(fileIndex, 1);\n        this.setState({ files });\n    }\n\n    handleUpdateRotationAngle = (fileIndex) => {\n        const files = this.state.files;\n        const fileRotationAngle = files[fileIndex].rotationAngle || 0;\n        files[fileIndex].rotationAngle = fileRotationAngle < 270 ? fileRotationAngle + 90 : 0;\n        this.setState({ files });\n    }\n\n    handleNext = () => { \n        this.setState({ activeStep: this.state.activeStep + 1 });\n    }\n\n    handleBack = () => { \n        this.setState({ activeStep: this.state.activeStep - 1 });\n    }\n\n    render() {\n        const { props, state } = this;\n        const { className, classes } = props;\n\n        if (state.activeStep > 0 && props.location.search !== '?edit') {\n            props.history.push({ search: '?edit' });\n        } else if (state.activeStep === 0 && props.location.search !== '') {\n            props.history.push({ search: '' });\n        }\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                {state.activeStep === 0 ? (\n                <div>\n                    {state.files.length === 1 ? (\n                    <MessageStack\n                        className={classes.MessageStack} \n                        messages={[\n                            { variant: 'info', text: 'Please, select more PDF files'}\n                        ]}\n                    />\n                    ) : null}\n\n                    <FileUploadManager\n                        files={state.files}\n                        accept=\"application/pdf\"\n                        maxFiles={20}\n                        labels={{\n                            selectFiles: 'Select PDF files',\n                            dropFiles: 'or, drop PDF files here'\n                        }}\n                        onChange={this.handleFileSelect}\n                    />\n                </div>\n                ) : state.activeStep === 1 ? (\n                <div className={classes.documentsContainer}>\n                    <Grid container className={classes.Grid}>\n                        {state.files.map((file, index) => \n                        <Grid item xs={12} md={6} className={classes.Grid_item} key={index}>\n                            <Card className={classes.Card}>\n                                <div className={classes.coverContainer}>\n                                    <div className={classes.coverWrapper}>\n                                        <img \n                                            className={classes.cover} \n                                            src={require('./PdfMergeTool.cover.svg')} \n                                            alt=\"\" \n                                            style={{transform: `rotate(${file.rotationAngle}deg)`}}\n                                        />\n                                    </div>\n                                </div>\n                                <CardContent className={classes.CardContent}>\n                                    <Typography component=\"h2\" className={classes.Typography_documentName}>\n                                        {file.name}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions className={classes.CardActions}>\n                                    <IconButton \n                                        className={classNames(classes.IconButton, classes.IconButton_remove)}\n                                        onClick={() => this.handleFileRemove(index)}\n                                    >\n                                        <ClearIcon fontSize=\"small\" />\n                                    </IconButton>\n                                    <IconButton \n                                        className={classNames(classes.IconButton)}\n                                        onClick={() => this.handleUpdateRotationAngle(index)}\n                                    >\n                                        <RotateRightIcon fontSize=\"small\" />\n                                    </IconButton>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                        )}\n                    </Grid>\n                </div>\n                ) : state.activeStep === 2 ? (\n                    <Processing  />\n                ) : null}\n                \n                {state.activeStep < 2 ? (\n                <div ref=\"sticked\" className={classNames(\n                    classes.actionsContainer, \n                    state.activeStep === 1 ? classes.isSticky : null\n                )}>\n                    {state.activeStep > 0 ? (\n                    <Button\n                        className={classes.Button_action}\n                        variant=\"contained\" \n                        size=\"large\"\n                        onClick={this.handleBack}>Back</Button>\n                    ) : null}\n                    <Button \n                        className={classes.Button_action}\n                        disabled={state.files.length < 2}\n                        variant=\"contained\" \n                        color=\"primary\" \n                        size=\"large\"\n                        onClick={this.handleNext}>\n                        {state.activeStep === 1 ? 'Merge PDF' : 'Proceed to PDF Merge'}    \n                    </Button>\n                </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n\nPdfMergeTool.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles(styles)(PdfMergeTool));","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center',\n        marginBottom: theme.spacing.unit * 6\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\nimport PdfMergeTool from '../../tools/PdfMergeTool/PdfMergeTool';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './PdfMergePage.styles';\n\nconst PdfMergePage = ({ className, classes }) => (\n    <div className={classNames(className, classes.root)}>\n        <AppContainer maxWidth=\"md\">\n            <header className={classes.header}>\n                <Typography variant=\"h1\" gutterBottom>PDF Merge</Typography>\n                {window.location.search !== '?edit' ? (\n                <Typography variant=\"body1\">Combine PDFs in the order you want with the easiest PDF merger available.</Typography>\n                ) : null}\n            </header>\n            <PdfMergeTool />\n        </AppContainer>\n    </div>\n);\n \nPdfMergePage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PdfMergePage);","const styles = theme => ({\n    root: {\n\n    },\n    Tabs: {\n        marginBottom: -1,\n        '& [role=tablist]>span': {\n            display: 'none'\n        }\n    },\n    Tab: {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius,\n        border: '1px solid',\n        borderColor: theme.palette.border.light,\n        borderBottomWidth: 0,\n        backgroundColor: 'initial',\n        textTransform: 'initial',\n        fontWeight: 500,\n        fontSize: '1rem',\n        color: theme.palette.text.secondary,\n        transition: theme.transitions.create(),\n        '&:not([aria-selected=true]):hover': {\n            borderColor: theme.palette.border.dark,\n            color: theme.palette.text.primary\n        },\n        '&[aria-selected=true]': {\n            backgroundColor: theme.palette.grey[50],\n            borderColor: theme.palette.border.dark,\n            color: theme.palette.text.primary\n        },\n        '&+button': {\n            marginLeft: -1\n        }\n    },\n    SwipeableViews: {\n        borderRadius: theme.shape.borderRadius,\n        borderTopLeftRadius: 0,\n        backgroundColor: theme.palette.grey[50],\n        borderColor: theme.palette.border.dark,\n        borderStyle: 'solid',\n        borderWidth: 1\n    },\n    tabContent: {\n        padding: theme.spacing.unit * 2.5,\n        [theme.breakpoints.up('md')]: {\n            padding: theme.spacing.unit * 5\n        }\n    },\n    List_range: {\n        width: '100%',\n        padding: 0\n    },\n    ListItem_range: {\n        backgroundColor: theme.palette.white,\n        borderRadius: theme.shape.borderRadius,\n        borderColor: theme.palette.border.light,\n        borderStyle: 'solid',\n        borderWidth: 1,\n        marginTop: theme.spacing.unit * 2.5,\n        padding: `${theme.spacing.unit * 1.25}px ${theme.spacing.unit * 2.5}px`\n    },\n    Grid_range: {\n        alignItems: 'center'\n    },\n    TextField_range: {\n        \n    },\n    Grid_removeAction: {\n        padding: '0!important',\n        [theme.breakpoints.down('md')]: {\n            position: 'absolute',\n            right: theme.spacing.unit,\n            top: theme.spacing.unit\n        }\n    },\n    Button_addRange: {\n        backgroundColor: theme.palette.white\n    },\n    contentActionsContainer: {\n        marginTop: theme.spacing.unit * 2,\n        [theme.breakpoints.up('md')]: {\n            textAlign: 'center',\n        }\n    },\n    Toolbar: {\n        marginTop: theme.spacing.unit * 2.5,\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n        borderStyle: 'solid',\n        borderWidth: 1,\n        borderColor: theme.palette.grey[200],\n        backgroundColor: theme.palette.grey[50],\n        justifyContent: 'center'\n    },\n    Button_action: {\n        backgroundColor: theme.palette.white,\n        '&:not(:last-child)': { \n            marginRight: theme.spacing.unit\n        }\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableViews from 'react-swipeable-views';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './SplitManager.styles';\n\nconst TabContainer = ({ className, children }) => (\n    <Typography className={className || ''} component=\"div\">\n        {children}\n    </Typography>\n);\n  \nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nclass SplitManager extends React.Component {\n    state = {\n        activeTabIndex: 0,\n        ranges: [\n            { from: null, to: null },\n            { from: null, to: null },\n        ],\n        needMergeInSingleFile: false\n    };\n\n    componentDidUpdate() {\n        this.swipeableActions.updateHeight();\n    }\n\n    handleToggleCheckbox = (event) => {\n        const checkboxStateProperty = event.target.name;\n        const checkStatus = this.state[checkboxStateProperty];\n        this.setState({ [checkboxStateProperty]: !checkStatus });\n    }\n    \n    handleTabChange = (event, activeTabIndex) => {\n        this.setState({ activeTabIndex });\n    };\n\n    handleTabSwipe = activeTabIndex => {\n        this.setState({ activeTabIndex });\n    };\n\n    handleAddRange = () => {\n        const ranges = this.state.ranges;\n        ranges.push({ from: null, to: null });\n        this.setState({ ranges });\n    }\n    \n    handleRemoveRange = (rangeIndex) => {\n        const ranges = this.state.ranges;\n        ranges.splice(rangeIndex, 1);\n        this.setState({ ranges });\n    }\n\n    render() {\n        const { props, state } = this;\n        const { className, classes } = props;\n        const { activeTabIndex } = state;\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                <Tabs\n                    className={classes.Tabs}\n                    value={activeTabIndex}\n                    onChange={this.handleTabChange}\n                    indicatorColor=\"primary\">\n                    <Tab \n                        className={classes.Tab}\n                        label=\"Split PDF by Range\" />\n                    <Tab \n                        className={classes.Tab} \n                        label=\"Extract all pages\" />\n                </Tabs>\n                <SwipeableViews\n                    className={classes.SwipeableViews} \n                    animateHeight\n                    action={(actions) => {this.swipeableActions = actions}}\n                    index={activeTabIndex}\n                    onChangeIndex={this.handleTabSwipe}>\n                    <TabContainer className={classes.TabContainer}>\n                        <div className={classes.tabContent}>\n                            <Button \n                                className={classes.Button_addRange}\n                                variant=\"outlined\" \n                                onClick={this.handleAddRange}\n                            >+ Add Range</Button>\n                            <List className={classes.List_range}>\n                                {state.ranges.map((range, index) => (\n                                <ListItem className={classes.ListItem_range} key={index}>\n                                    <Grid container spacing={24} className={classes.Grid_range}>\n                                        <Grid item xs={12} md={3}>\n                                            <Typography variant=\"subtitle1\">Split pages</Typography>\n                                        </Grid>\n                                        <Grid item xs={12} md={4}>\n                                            <TextField \n                                                className={classes.TextField_range}\n                                                variant=\"outlined\"\n                                                label=\"From\"\n                                                type=\"number\"\n                                                fullWidth\n                                                value={range.from}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} md={4}>\n                                            <TextField \n                                                className={classes.TextField_range}\n                                                variant=\"outlined\"\n                                                label=\"To\"\n                                                type=\"number\"\n                                                fullWidth\n                                                value={range.to}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} md={1} className={classes.Grid_removeAction}>\n                                            <IconButton\n                                                aria-label=\"Remove uploading\"\n                                                onClick={() => this.handleRemoveRange(index)}>\n                                                <ClearIcon fontSize=\"small\" />\n                                            </IconButton>\n                                        </Grid>\n                                    </Grid>\n                                </ListItem>\n                                ))}\n                                <div className={classes.contentActionsContainer}>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox \n                                                name=\"needMergeInSingleFile\"\n                                                checked={state.needMergeInSingleFile} \n                                                onChange={this.handleToggleCheckbox}\n                                            />\n                                        }\n                                        label=\"Merge all ranges into a single PDF file\"\n                                    />\n                                </div>\n                            </List>\n                       </div> \n                    </TabContainer>\n                    <TabContainer className={classes.TabContainer}>\n                        <div className={classes.tabContent}>\n                            <Typography variant=\"body1\">Every page of this PDF file will be converted in one separated PDF file.</Typography>\n                        </div>\n                    </TabContainer>\n                </SwipeableViews>\n\n                <Toolbar className={classes.Toolbar}>\n                    <Button \n                        className={classes.Button_action} \n                        variant=\"outlined\">Action 1</Button>\n                    <Button \n                        className={classes.Button_action} \n                        variant=\"outlined\">Action 2</Button>\n                </Toolbar>\n            </div>\n        );\n    }\n}\n\nSplitManager.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SplitManager);","const styles = theme => ({\n    root: {\n\n    },\n    actionsContainer: {\n        textAlign: 'center'\n    },\n    Button_action: {\n        '&+button': {\n            marginLeft: theme.spacing.unit\n        }\n    },\n    SplitManager: {\n        marginBottom: theme.spacing.unit * 2.5\n    }\n});\n\nexport default styles;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nimport Processing from '../../common/Processing/Processing';\nimport SplitManager from '../SplitManager/SplitManager';\nimport FileUploadManager from '../FileUploadManager/FileUploadManager';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './PdfSplitTool.styles';\n\nclass PdfSplitTool extends React.Component {\n    state = {\n        activeStep: 0,\n        files: []\n    };\n\n    handleFileSelect = (selectedFiles) => {\n        this.setState({ files: selectedFiles });\n        this.handleNext();\n    }\n\n    handleNext = () => { \n        this.setState({ activeStep: this.state.activeStep + 1 });\n    }\n\n    handleBack = () => { \n        this.setState({ activeStep: this.state.activeStep - 1 });\n    }\n\n    render() {\n        const { props, state } = this;\n        const { className, classes } = props;\n\n        if (state.activeStep > 0 && props.location.search !== '?edit') {\n            props.history.push({ search: '?edit' });\n        } else if (state.activeStep === 0 && props.location.search !== '') {\n            props.history.push({ search: '' });\n        }\n\n        return (\n            <div className={classNames(className, classes.root)}>\n                {state.activeStep === 0 ? (\n                    <FileUploadManager\n                        files={state.files}\n                        accept=\"application/pdf\"\n                        maxFiles={1}\n                        labels={{\n                            selectFiles: 'Select PDF files',\n                            dropFiles: 'or, drop PDF files here'\n                        }}\n                        onChange={this.handleFileSelect}\n                    />\n                ) : state.activeStep === 1 ? (\n                    <SplitManager className={classes.SplitManager} />\n                ) : state.activeStep === 2 ? (\n                    <Processing className={classes.Processing}  />\n                ) : null}\n\n                <div className={classes.actionsContainer}>\n                    {state.activeStep === 1 ? (\n                    <Button\n                        className={classes.Button_action}\n                        variant=\"contained\" \n                        size=\"large\"\n                        onClick={this.handleBack}>Back</Button>\n                    ) : null}\n\n                    {state.activeStep <= 1 ? (\n                    <Button \n                        className={classes.Button_action}\n                        disabled={state.files.length < 1}\n                        variant=\"contained\" \n                        color=\"primary\" \n                        size=\"large\"\n                        onClick={this.handleNext}>\n                        Split PDF   \n                    </Button>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nPdfSplitTool.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles(styles)(PdfSplitTool));","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center',\n        marginBottom: theme.spacing.unit * 6\n    },\n    Grid_item: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 8,\n        }\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\nimport PdfSplitTool from '../../tools/PdfSplitTool/PdfSplitTool';\n// Styles\nimport styles from './PdfSplitPage.styles';\n\nconst PdfSplitPage = ({ className, classes }) => (\n    <div className={classNames(className, classes.root)}>\n        <AppContainer maxWidth=\"md\">\n            <header className={classes.header}>\n                <Typography variant=\"h1\" gutterBottom>PDF Split</Typography>\n                {window.location.search !== '?edit' ? (\n                <Typography variant=\"body1\">Separate one page or a whole set for easy conversion into independent PDF files.</Typography>\n                ) : null}\n            </header>\n            <PdfSplitTool />\n        </AppContainer>\n    </div>\n);\n \nPdfSplitPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PdfSplitPage);","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center'\n    },\n    Button: {\n        marginTop: theme.spacing.unit * 3\n    },\n    Grid_item: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 8,\n        }\n    },\n    Divider: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ConverterPage.styles';\n\nconst ConverterPage = ({ className, classes }) => {\n    const converterPath = window.location.pathname.replace('/convert/', '');\n    const converterPathItems = converterPath.split('-');\n    const convertFrom = converterPathItems[0].toUpperCase();\n    const convertTo = converterPathItems[2].toUpperCase();\n\n    return (\n        <div className={classNames(className, classes.root)}>\n            <AppContainer>\n                <header className={classes.header}>\n                    <Typography variant=\"h1\" gutterBottom>Convert {convertFrom} to {convertTo}</Typography>\n                    <Typography variant=\"body1\">Convert media files online from one format into another.</Typography>\n                    <Button \n                        className={classes.Button}\n                        component=\"a\" \n                        target=\"_blank\"\n                        href={'https://www.freeconvert.com/' + converterPath}\n                        variant=\"contained\" \n                        color=\"secondary\"\n                    >Go to Converter</Button>\n                </header>\n            </AppContainer>\n            <Divider className={classes.Divider} />\n            <AppContainer>\n                <Grid container spacing={40}>\n                    <Grid className={classes.Grid_item} item xs={12}>\n                        <Typography variant=\"h2\" gutterBottom>How does it work?</Typography>\n                        <Typography variant=\"body1\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.</Typography>\n                    </Grid>\n                    <Grid className={classes.Grid_item} item md={6}>\n                        <Typography variant=\"h2\" gutterBottom>What does it do?</Typography>\n                        <Typography variant=\"body1\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.</Typography>\n                    </Grid>\n                    <Grid className={classes.Grid_item} item md={6}>\n                        <Typography variant=\"h2\" gutterBottom>Why should I use it?</Typography>\n                        <Typography variant=\"body1\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.</Typography>\n                    </Grid>\n                </Grid>\n            </AppContainer>\n        </div>\n    );\n};\n \nConverterPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ConverterPage);","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center'\n    },\n    Grid_item: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 8,\n        }\n    },\n    Button_getStarted: {\n        marginTop: theme.spacing.unit * 3\n    },\n    Divider: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './FeatureCroppingPage.styles';\n\nconst FeatureCroppingPage = ({ className, classes }) => (\n    <div className={classNames(className, classes.root)}>\n        <AppContainer>\n            <header className={classes.header}>\n                <Typography variant=\"h1\" gutterBottom>Crop Photos Using Our Image Editor</Typography>\n                <Typography variant=\"body1\">Create better compositions, remove unwanted parts, or get the aspect ratio right</Typography>\n                <Button \n                    component={NavLink}\n                    to=\"/image/resize\"\n                    className={classes.Button_getStarted}\n                    variant=\"contained\" \n                    color=\"secondary\"\n                    size=\"large\"\n                >Get Started</Button>\n            </header>\n        </AppContainer>\n        <Divider className={classes.Divider} />\n        <AppContainer>\n            <Grid container spacing={40}>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Create better compositions</Typography>\n                    <Typography variant=\"body1\">ImageResize.org’s online photo cropper lets you crop your images to fit the perfect composition and get rid of unwanted areas from your photo.</Typography>\n                    <Typography variant=\"body1\">Sometimes it is important to capture the moment than to worry about composition. The photographic moments happens so fast and you probably don’t have time to decide what to include in the frame. Need not worry, our photo cropper lets you crop your images using a specific aspect ratio, exact dimensions, or simply drag and crop.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <img src={require('../../../content/images/cropping-1.jpg')} width=\"100%\" alt=\"\" />\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <img src={require('../../../content/images/cropping-2.jpg')} width=\"100%\" alt=\"\" />\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Crop freestyle or use an aspect ratio</Typography>\n                    <Typography variant=\"body1\">Sometimes your photos need to be cropped to a certain aspect ratio to be able to properly displayed. Most social media sites such as Pinterest and Facebook or even smart TVs would stretch and distort your images if they are not properly cropped to fit the aspect ratio best practices set by those sources.</Typography>\n                    <Typography variant=\"body1\">Our image cropper has built-in aspect ratio button to help you easily apply an aspect ratio to your crop. You can also crop it freestyle if you choose to do so.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>How to crop a photo</Typography>\n                    <Typography variant=\"body1\">Follow these simple 4 step process to start cropping your photo</Typography>\n\n                    <Stepper activeStep={-1} orientation=\"vertical\">\n                        <Step><StepLabel><Typography variant=\"body1\">Upload your photo to the single image editor</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Select the crop option under \"Image Adjust\" step</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Select a crop area or a pre-configured aspect ratio and click \"Apply”</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Click \"Resize Image\" to generate the cropped version of your image</Typography></StepLabel></Step>\n                    </Stepper>\n                </Grid>\n            </Grid>\n        </AppContainer>\n    </div>\n);\n \nFeatureCroppingPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FeatureCroppingPage);","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center'\n    },\n    Grid_item: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 8,\n        }\n    },\n    Button_getStarted: {\n        marginTop: theme.spacing.unit * 3\n    },\n    Divider: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './FeatureEditingPage.styles';\n\nconst FeatureEditingPage = ({ className, classes }) => (\n    <div className={classNames(className, classes.root)}>\n        <AppContainer>\n            <header className={classes.header}>\n                <Typography variant=\"h1\" gutterBottom>A Simple Image Editor Without Complexity</Typography>\n                <Typography variant=\"body1\">Add filters, crop, resize, or flip & rotate your images with ease</Typography>\n                <Button  \n                    component={NavLink}\n                    to=\"/image/resize\"\n                    className={classes.Button_getStarted}\n                    variant=\"contained\" \n                    color=\"secondary\"\n                    size=\"large\"\n                >Get Started</Button>\n            </header>\n        </AppContainer>\n        <Divider className={classes.Divider} />\n        <AppContainer>\n            <Grid className={classes.Grid_container} container spacing={40}>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Apply photo filters with ease</Typography>\n                    <Typography variant=\"body1\">Sometimes your photos need an extra boost to bring out the colors and add that wow factor. Our photo editor allows you to add a variety of preconfigured filters to bring out the best in your photos.</Typography>\n                    <Typography variant=\"body1\">Whether you are looking to give your photo a Retro or a Light leak look, we have got your covered with more than 15 photo filters.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <img src={require('../../../content/images/editing-1.jpg')} width=\"100%\" alt=\"\" />\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <img src={require('../../../content/images/editing-2.jpg')} width=\"100%\" alt=\"\" />\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Adjust your photo parameters</Typography>\n                    <Typography variant=\"body1\">No matter how advanced your camera is, sometimes your photos still need a post-processing boost to bring out the details of the photo. You can use the Image Editor to adjust things like Brightness, Contrast, and saturation of your photos.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Crop, flip, or rotate images</Typography>\n                    <Typography variant=\"body1\">Sometimes your photo compositions don’t come out the way you want them. Our Image Editor let you get rid of unwanted areas in your photos using the Photo Cropper.</Typography>\n                    <Typography variant=\"body1\">Whether you are looking to give your photo a Retro or a Light leak look, we have got your covered with more than 15 photo filters.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <img src={require('../../../content/images/editing-3.jpg')} width=\"100%\" alt=\"\" />\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <img src={require('../../../content/images/editing-4.jpg')} width=\"100%\" alt=\"\" />\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>It is super simple to use</Typography>\n                    <Typography variant=\"body1\">Image editing doesn’t have to be a rocket science. We built our editor with ease of use in mind. Editing a photo for the correct style and adjusting it to your artistic needs shouldn’t take more than 10 seconds!</Typography>\n                    <Typography variant=\"body1\">Give it a try and you will love the simplicity of our Image editor. We support both mobile and Desktop users, so give it a try regardless of your device.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>How to edit a photo</Typography>\n                    <Typography variant=\"body1\">Follow these simple 4 step process to edit your photos</Typography>\n\n                    <Stepper activeStep={-1} orientation=\"vertical\">\n                        <Step><StepLabel><Typography variant=\"body1\">Upload your photo to the image editor</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Select the editing functions from the \"Image Adjust\"section of our editor</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Optimize or resize the image is desired</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Click \"Resize Image\"to download the edited version of your image</Typography></StepLabel></Step>\n                    </Stepper>\n                </Grid>\n            </Grid>\n        </AppContainer>\n    </div>\n);\n \nFeatureEditingPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FeatureEditingPage);","const styles = theme => ({\n    root: {},\n    header: {\n        textAlign: 'center'\n    },\n    Grid_item: {\n        [theme.breakpoints.up('md')]: {\n            marginBottom: theme.spacing.unit * 8,\n        }\n    },\n    Button_getStarted: {\n        marginTop: theme.spacing.unit * 3\n    },\n    Divider: {\n        maxWidth: theme.breakpoints.values.lg,\n        margin: 'auto'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Hidden from '@material-ui/core/Hidden';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './FeatureCompressingPage.styles';\n\nconst FeatureCompressingPage = ({ className, classes }) => (\n    <div className={classNames(className, classes.root)}>\n        <AppContainer>\n            <header className={classes.header}>\n                <Typography variant=\"h1\" gutterBottom>Compress JPEG and PNG Images Without Losing Quality</Typography>\n                <Typography variant=\"body1\">Optimize your images to reduce file size while keeping image quality</Typography>\n                <Button  \n                    component={NavLink}\n                    to=\"/image/resize\"\n                    className={classes.Button_getStarted}\n                    variant=\"contained\" \n                    color=\"secondary\"\n                    size=\"large\"\n                >Get Started</Button>\n            </header>\n        </AppContainer>\n        <Divider className={classes.Divider} />\n        <AppContainer>\n            <Grid container spacing={40}>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Optimizing is no longer optional</Typography>\n                    <Typography variant=\"body1\">If your pages load slow, it is probably caused by uncompressed images. The problem is grave enough for Google to use page load time as a ranking factor now.</Typography>\n                    <Typography variant=\"body1\">Optimizing your images properly lower your load time, reduce bounce rate, and save both your and customer’s data costs. So there is really no reason to upload an image to your website without optimizing it!</Typography>\n                </Grid>\n                <Hidden only={['xs', 'sm']}>\n                    <Grid className={classes.Grid_item} item md={6}></Grid>\n                </Hidden>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <img src={require('../../../content/images/compressing-1.jpg')} width=\"100%\" alt=\"\" />\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>State of the art JPEG compression</Typography>\n                    <Typography variant=\"body1\">JPEG is the most used image format on the world wide web. This is because it uses a lossy (irreversible) compression algorithm. However, most of the JPEG images you produced by digital cameras or download from the web are not compressed to the full extent.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>State of the art PNG compression</Typography>\n                    <Typography variant=\"body1\">PNG is another image format that is widely used. Compared to JPEG, PNG uses a lossless (reversible) compression algorithm. This means it stores extra data to be able to reverse the image to its original quality. Such extra data, however, bloat the file size.</Typography>\n                    <Typography variant=\"body1\">Our PNG Compressor applies a lossy compression algorithm and removes extra metadata. The result is a drastically reduced PNG files size without losing image quality.</Typography>\n                </Grid>\n                <Hidden only={['xs', 'sm']}>\n                    <Grid className={classes.Grid_item} item md={6}></Grid>\n                </Hidden>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <img src={require('../../../content/images/compressing-2.jpg')} width=\"100%\" alt=\"\" />\n                </Grid>\n                <Grid className={classes.Grid_item} item md={6}>\n                    <Typography variant=\"h2\" gutterBottom>Bulk image compression</Typography>\n                    <Typography variant=\"body1\">Want to compress all your images at once? No problem. Simply drag and drop or select your images to our bulk image compressor and it will automatically start compressing them.</Typography>\n                </Grid>\n                <Grid className={classes.Grid_item} item xs={12}>\n                    <Typography variant=\"h2\" gutterBottom>How to compress a photo</Typography>\n                    <Typography variant=\"body1\">Follow these two steps to compress single or bulk images</Typography>\n                    <Stepper activeStep={-1} orientation=\"vertical\">\n                        <Step><StepLabel><Typography variant=\"body1\">Upload your photos to the image compressor</Typography></StepLabel></Step>\n                        <Step><StepLabel><Typography variant=\"body1\">Click Download Images button to get a zip file with all your compressed images</Typography></StepLabel></Step>\n                    </Stepper>\n                </Grid>\n            </Grid>\n        </AppContainer>\n    </div>\n);\n \nFeatureCompressingPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FeatureCompressingPage);","const styles = theme => ({\n    root: {},\n    section: {\n        marginBottom: theme.spacing.unit * 3\n    },\n    url: {\n        color: theme.palette.primary.main\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './TermsOfServicePage.styles';\n\nconst TermsOfServicePage = ({ className, classes }) => (\n    <article className={classNames(className, classes.root)}>\n        <AppContainer>\n            <section className={classes.section}>\n                <Typography variant=\"h1\" gutterBottom>Terms of Service</Typography>\n                <Typography variant=\"body1\">By using our website you accept these terms of use, including our [Privacy Policy](/privacy). If you don’t agree, your remedy is to stop using our website. We may update these terms of use from time to time, so you should revisit each time you use our website.</Typography>\n            </section>\n            <section className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Entire Agreement</Typography>\n                <Typography variant=\"body1\">These terms of use forms the entire understanding between you and us with respect to your use of our website.</Typography>\n            </section>\n            <section className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>No Unlawful or Prohibited Use</Typography>\n                <Typography variant=\"body1\">As a condition of your use of this website, you warrant that you will not use this website for any purpose that is unlawful or prohibited by these terms of use.</Typography>\n            </section>\n            <section className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Links Disclaimer</Typography>\n                <Typography variant=\"body1\"><strong>We have no control over the information accessed through links from our site. You use links at your own risk.</strong></Typography>\n            </section>\n            <section className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Termination/Access Restriction</Typography>\n                <Typography variant=\"body1\">We reserve the right to terminate your access to this website and the related services or any portion of it at any time, without notice.</Typography>\n            </section>\n            <section className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Disclaimer</Typography>\n                <Typography variant=\"body1\">Anything contained on this website is provided “as is” without warranty or condition of any kind. While we attempt to ensure that the content of our website is correct, we cannot guarantee its reliability, accuracy or completeness because this information changes all the time. You agree that no information or advice provided by us constitutes medical, legal or financial advice or advice of any other regulated industry and users should not rely exclusively on any such information or advice.</Typography>\n            </section>\n            <section className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Limitation of Liability</Typography>\n                <Typography variant=\"body1\">We will not be liable to you or any other person or entity for any damages whatsoever arising as a result of your use of this website in any way. In addition, where warranties are implied by law, you acknowledge and agree that the total aggregate liability to us is limited to the total amount paid by you for the particular services that are the subject of the cause of action, even if those services were provided to you without cost.</Typography>\n                <Typography variant=\"body1\">This limitation of liability applies to the fullest extent permitted by law, and shall survive any termination or expiration of this agreement or your use of this website or the services found on this website.</Typography>\n            </section>\n            <section className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Applicable Law</Typography>\n                <Typography variant=\"body1\">If any matter concerning this website “ImageResize.org” shall be brought before a court of law, pre- or post-arbitration, viewer, visitor, member, subscriber or customer agrees to that the sole and proper jurisdiction to be the state, city and country of the website owner unless otherwise here specified. In the event that litigation is in a federal court, the proper court shall be the closest federal court to the web site owner’s address.</Typography>\n            </section>\n            <section className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Copyright</Typography>\n                <Typography variant=\"body1\">All contents of this website are copyright by ImageResize.org. Unless otherwise specified, we own or are licensed to use the copyright in all material on our website. Please contact us should you require permission to reproduce any of the contents of this site. We may or may not be able to authorize use, particularly of trademarks or materials of other companies.</Typography>\n                <Typography variant=\"body1\">Only your personal use of our copyright materials is permitted, which means that you may access, download, or print such materials for your personal use only. Commercial use of any sort is expressly prohibited.</Typography>\n            </section>\n            <section className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>Material Connection Disclosure:</Typography>\n                <Typography variant=\"body1\">We may promote products or services offered by other individuals or businesses and we may be paid affiliate commissions on any purchase you make. You will not be required to purchase anything we recommend. You should always perform your own due diligence before purchasing a product or service mentioned on this website ImageResize.org.All recommendations are made in good faith based upon the opinion of the writer at the time a product or service is mentioned on the website.</Typography>\n            </section>\n            <section className={classes.section}>\n                <Typography variant=\"body1\"><b>Service Contact:</b> <a href=\"mailto:imageresize.org@gmail.com\" className={classes.url}>{`<imageresize.org@gmail.com>`}</a></Typography>\n            </section>\n        </AppContainer>\n    </article>\n);\n \nTermsOfServicePage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TermsOfServicePage);","const styles = theme => ({\n    root: {}\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './PrivacyPage.styles';\n\nconst PrivacyPage = ({ className, classes }) => (\n    <article className={classNames(className, classes.root)}>\n        <AppContainer>\n            <Typography variant=\"h1\" gutterBottom>Privacy policy</Typography>\n            <Typography variant=\"body1\" gutterBottom>Our privacy policy is very simple. Your images are yours.You own them. When you upload images to ImageResize.org, we temporarily save them on our servers to process them and they are deleted automatically from our servers after 30 minutes - forever. We don't ask you for any other private information.</Typography>\n            <Typography variant=\"body1\" gutterBottom>If you choose to post the resized images to Facebook directly from ImageResize.org, and give us permission by connecting through Facebook, then we get your email id from Facebook and we store it in our database to keep a track of how many users are making use of the feature. Your email is not shared with anyone. If we ever send you an email, it will come with an unsubscribe link so you can remove yourself form our list.</Typography>\n            <Typography variant=\"body1\" gutterBottom>By using ImageResize.org, you consent to our privacy policy.</Typography>\n            <Typography variant=\"body1\" gutterBottom>We reserve the right to change our privacy policy at any time and in case we decide to change the privacy policy, we will post the changes on this page.</Typography>\n        </AppContainer>\n    </article>\n);\n \nPrivacyPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PrivacyPage);","const styles = theme => ({\n    root: {},\n    section: {\n        marginBottom: theme.spacing.unit * 3\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './HelpPage.styles';\n\nconst HelpPage = ({ className, classes }) => (\n    <article className={classNames(className, classes.root)}>\n        <AppContainer>\n            <Typography variant=\"h1\" gutterBottom>Help</Typography>\n            <section className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>How do I resize a single image?</Typography>\n                <Typography variant=\"body1\" gutterBottom>To resize a JPG or a PNG image, simply upload it to our single image editor here. Once the file is uploaded, you will be taken to our editor where you can select a new size for your image.</Typography>\n            </section>\n            <section className={classes.section}>\n                <Typography variant=\"h2\" gutterBottom>How do I resize multiple images at once?</Typography>\n                <Typography variant=\"body1\" gutterBottom>To resize multiple images at once, you can upload or drag and drop your image files to our bulk resize page. Once your files are uploaded, you can select a new size for your files. New size can be specified as a percentage of original file or as an exact pixel amount.</Typography>\n            </section>\n        </AppContainer>\n    </article>\n);\n \nHelpPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HelpPage);","const styles = theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        maxWidth: 1170,\n        minHeight: 360,\n        margin: 'auto',\n        textAlign: 'center'\n    }\n});\n\nexport default styles;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport AppContainer from '../../layouts/AppContainer/AppContainer';\n// Styles\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './NotFoundPage.styles';\n\nconst NotFoundPage = ({ className, classes }) => (\n    <div className={classNames(className, classes.root)}>\n        <AppContainer>\n            <Typography variant=\"h1\">404 Not Found</Typography>\n            <Typography component=\"p\" variant=\"subtitle1\">The page you are looking for does not exist.</Typography>\n        </AppContainer>\n    </div>\n);\n \nNotFoundPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NotFoundPage);","import React from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\n\nimport MemeMakerPage from '../../pages/MemeMakerPage/MemeMakerPage';\nimport ImageResizePage from '../../pages/ImageResizePage/ImageResizePage';\nimport ImageBulkResizePage from '../../pages/ImageBulkResizePage/ImageBulkResizePage';\nimport ImageCompressPage from '../../pages/ImageCompressPage/ImageCompressPage';\nimport ImageFeaturesPage from '../../pages/ImageFeaturesPage/ImageFeaturesPage';\nimport PdfResizePage from '../../pages/PdfResizePage/PdfResizePage';\nimport PdfCompressPage from '../../pages/PdfCompressPage/PdfCompressPage';\nimport PdfMergePage from '../../pages/PdfMergePage/PdfMergePage';\nimport PdfSplitPage from '../../pages/PdfSplitPage/PdfSplitPage';\nimport ConverterPage from '../../pages/ConverterPage/ConverterPage';\nimport FeatureCroppingPage from '../../pages/FeatureCroppingPage/FeatureCroppingPage';\nimport FeatureEditingPage from '../../pages/FeatureEditingPage/FeatureEditingPage';\nimport FeatureCompressingPage from '../../pages/FeatureCompressingPage/FeatureCompressingPage';\nimport TermsOfServicePage from '../../pages/TermsOfServicePage/TermsOfServicePage';\nimport PrivacyPage from '../../pages/PrivacyPage/PrivacyPage';\nimport HelpPage from '../../pages/HelpPage/HelpPage';\nimport NotFoundPage from '../../pages/NotFoundPage/NotFoundPage';\n\nclass AppRouter extends React.Component {\n    componentDidUpdate() {\n        window.scrollTo(0, 0)\n    }\n    \n    render() {\n        return (\n            <HashRouter>\n                <Switch>\n                    <Route path=\"/\" exact={true} component={MemeMakerPage} />\n                    <Route path=\"/image/resize\" component={ImageResizePage} />\n                    <Route path=\"/image/bulk-resize\" component={ImageBulkResizePage} />\n                    <Route path=\"/image/compress\" component={ImageCompressPage} />\n                    <Route path=\"/image/features\" component={ImageFeaturesPage} />\n\n                    <Route path=\"/pdf/resize\" component={PdfResizePage} />\n                    <Route path=\"/pdf/compress\" component={PdfCompressPage} />\n                    <Route path=\"/pdf/merge\" component={PdfMergePage} />\n                    <Route path=\"/pdf/split\" component={PdfSplitPage} />\n\n                    <Route path=\"/convert/jpg-to-pdf\" component={ConverterPage} />\n                    <Route path=\"/convert/jpg-to-png\" component={ConverterPage} />\n                    <Route path=\"/convert/pdf-to-jpg\" component={ConverterPage} />\n                    <Route path=\"/convert/pdf-to-png\" component={ConverterPage} />\n                    <Route path=\"/convert/png-to-jpg\" component={ConverterPage} />\n                    <Route path=\"/convert/png-to-pdf\" component={ConverterPage} />\n\n                    <Route path=\"/feature/cropping\" component={FeatureCroppingPage} />\n                    <Route path=\"/feature/editing\" component={FeatureEditingPage} />\n                    <Route path=\"/feature/compressing\" component={FeatureCompressingPage} />\n\n                    <Route path=\"/terms-of-service\" component={TermsOfServicePage} />\n                    <Route path=\"/privacy\" component={PrivacyPage} />\n                    <Route path=\"/help\" component={HelpPage} />\n                    <Route component={NotFoundPage} />\n                </Switch>\n            </HashRouter>\n        )\n    }\n}\n\nexport default AppRouter;\n","// Based on Default Material UI Theme\n// https://material-ui.com/customization/default-theme/\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport red from '@material-ui/core/colors/red';\n// App Font\nimport './assets/fonts/GothamPro/GothamPro.css'; \n\nconst white = 'rgba(255,255,255,1)';\n\nlightBlue.light = lightBlue[300];\nlightBlue.main = lightBlue[400];\nlightBlue.dark = lightBlue[500];\nlightBlue.contrastText = white;\n\nlightGreen.light = lightGreen[300];\nlightGreen.main = lightGreen[400];\nlightGreen.dark = lightGreen[500];\nlightGreen.contrastText = white;\n\nred.light = red[300];\nred.main = red[400];\nred.dark = red[500];\n\nconst grey = {\n  50: '#FAFBFB',\n  100: '#f5f5f5',\n  200: '#e9e9e9',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#888888',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  'A100': '#d5d5d5',\n  'A200': '#aaaaaa',\n  'A400': '#303030',\n  'A700': '#616161',\n}\n\nconst spacing = {\n  unit: 8\n};\n\nconst dashedBorderImageDark = `url(\"data:image/svg+xml;utf8,<svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg'><rect width='100%' height='100%' style='fill: none; stroke: ${grey[600]}; stroke-width: 1; stroke-dasharray: 7 14'/></svg>\")`;\nconst dashedBorderImagePrimary = dashedBorderImageDark.replace(/stroke:.*?;/, `stroke: ${lightBlue.main};`);\nconst dashedBorderImageSecondary = dashedBorderImageDark.replace(/stroke:.*?;/, `stroke: ${lightGreen.main};`);\n\nconst fontFamily = '\"GothamPro\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n\nconst theme = createMuiTheme({\n  states: {\n    hover: {\n      boxShadow: `${lightBlue.main} 0 0 0 1px`\n    },\n    selected: {\n      boxShadow: `${lightBlue.main} 0 0 0 2px`\n    }\n  },\n\n  spacing: {\n    unit: spacing.unit\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 800,\n      lg: 1170,\n      xl: 1920,\n    }\n  },\n  shadows: ['none'],\n  palette: {\n    white: white,\n    primary: lightBlue,\n    secondary: lightGreen,\n    error: red,\n    grey: grey,\n    background: {\n      default: white\n    },\n    divider: grey[200],\n    border: {\n      light: grey[200],\n      dark: grey[500],\n      dashedBorderImageDark: dashedBorderImageDark,\n      dashedBorderImagePrimary: dashedBorderImagePrimary,\n      dashedBorderImageSecondary: dashedBorderImageSecondary,\n    },\n    text: {\n      primary: grey[700],\n      secondary: grey[600]\n    }\n  },\n  shape: {\n    borderRadius: 3\n  },\n  typography: {\n    useNextVariants: true,\n    color: grey[700],\n    headline: {\n      fontFamily: fontFamily,\n      color: grey[700]\n    },\n    title: {\n      fontFamily: fontFamily,\n      fontWeight: 400,\n      color: grey[700]\n    },\n    subheading: {\n      fontFamily: fontFamily,\n      color: grey[600]\n    },\n    body2: {\n      fontFamily: fontFamily,\n      color: grey[600]\n    },\n    body1: {\n      fontFamily: fontFamily,\n      color: grey[600],\n      fontSize: (window.outerWidth > 600) ? 18 : 16\n    },\n    button: {\n      fontFamily: fontFamily,\n      color: grey[700],\n      fontSize: spacing.unit * 2,\n      textTransform: 'initial'\n    },\n    h1: {\n      fontFamily: fontFamily,\n      fontWeight: 400,\n      lineHeight: 1.25,\n      fontSize: (window.outerWidth < 600) ? (spacing.unit * 3) : (spacing.unit * 4.5),\n      color: grey[700]\n    },\n    h2: {\n      fontFamily: fontFamily,\n      lineHeight: 1.25,\n      fontSize: (window.outerWidth < 600) ? (spacing.unit * 2.75) : (spacing.unit * 3.5),\n      fontWeight: 400,\n      color: grey[700]\n    },\n    h3: {\n      fontFamily: fontFamily,\n      lineHeight: 1.25,\n      fontSize: (window.outerWidth < 600) ? (spacing.unit * 2.5) : (spacing.unit * 3),\n      fontWeight: 400,\n      color: grey[700]\n    },\n    h4: {\n      fontFamily: fontFamily,\n      lineHeight: 1.25,\n      fontSize: (window.outerWidth < 600) ? (spacing.unit * 2.25) : (spacing.unit * 2.5),\n      color: grey[700]\n    },\n    h5: {\n      fontFamily: fontFamily,\n      lineHeight: 1.25,\n      fontSize: spacing.unit * 2,\n      color: grey[700]\n    },\n    h6: {\n      fontFamily: fontFamily,\n      lineHeight: 1.25,\n      fontSize: spacing.unit * 1.5,\n      color: grey[700]\n    },\n    subtitle1: {\n      fontFamily: fontFamily,\n      color: grey[600]\n    },\n    subtitle2: {\n      fontFamily: fontFamily,\n      color: grey[600]\n    },\n    body1Next: {\n      fontFamily: fontFamily,\n      color: grey[600]\n    },\n    body2Next: {\n      fontFamily: fontFamily,\n      color: grey[600]\n    },\n    buttonNext: {\n      fontFamily: fontFamily,\n      color: grey[700]\n    },\n    captionNext: {\n      fontFamily: fontFamily,\n      color: grey[700]\n    },\n    overline: {\n      fontFamily: fontFamily,\n      color: grey[700]\n    }\n  }\n});\n\nexport default theme;","const styles = theme => ({\n    root: {},\n    main: {\n        [theme.breakpoints.up('md')]: {\n            backgroundImage: \n                `url(${require('./assets/images/background-left.jpg')}),` +\n                `url(${require('./assets/images/background-right.jpg')})`,\n            backgroundPosition: \n                `top 100px left,` +\n                `center right`,\n            backgroundRepeat: 'no-repeat'\n        }\n    }\n});\n\nexport default styles;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppHeader from './components/layouts/AppHeader/AppHeader';\nimport AppFooter from './components/layouts/AppFooter/AppFooter';\nimport AppRouter from './components/layouts/AppRouter/AppRouter';\n// Theme\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport theme from './App.theme';\n// Styles\nimport styles from './App.styles';\n\nclass App extends React.Component {\n  state = {}\n\n  render() {\n    const { props } = this;\n    const { classes } = props;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className={classes.root}>\n          <AppHeader />\n          <main className={classes.main}>\n            <AppRouter />\n          </main>\n          <AppFooter />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}